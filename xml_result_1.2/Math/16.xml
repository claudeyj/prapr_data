<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>588ms</time></test></testsExecutionTime><patchExecutionTime>683ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.03488961813260259</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>Substituted 20.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>460ms</time></test></testsExecutionTime><patchExecutionTime>544ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05288858853479451</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>149</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>189</index><block>23</block><killingTests/><suspValue>0.05459510904326141</suspValue><description>local intPartA is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>196</index><block>23</block><killingTests/><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>274</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local intFrac is replaced by local intVal to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>278</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local intFrac is replaced by local intVal to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local tempB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local extra is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempC is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>189</index><block>23</block><killingTests/><suspValue>0.05459510904326141</suspValue><description>local intPartA is replaced by local extra to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>196</index><block>23</block><killingTests/><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local extra to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>218</index><block>23</block><killingTests/><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local extra to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local tempB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local extra is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempA is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempC is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>196</index><block>23</block><killingTests/><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local intPartB to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>218</index><block>23</block><killingTests/><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local intPartB to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local tempB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local extra is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempA is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempC is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>218</index><block>23</block><killingTests/><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local fracPartA to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local tempB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local extra is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempA is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempC is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local x is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>218</index><block>23</block><killingTests/><suspValue>0.0467780269724988</suspValue><description>local intPartA is replaced by local fracPartB to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local tempB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local extra is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempA is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempC is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local fracPartB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local epsilon is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local tempB is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>local extra is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempA is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempC is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>local tempB is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>149</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>159</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>access to local intPartA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>196</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>218</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>274</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>278</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local tempB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local extra is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempC is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>149</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>159</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>access to local intPartA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>196</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>218</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>274</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>278</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local tempB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local extra is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempC is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>149</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>159</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>access to local intPartA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>196</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>218</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>274</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>278</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local tempB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local extra is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempC is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>149</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>159</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>access to local intPartA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>196</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>218</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>274</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>278</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local tempB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local extra is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempC is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>149</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>159</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>access to local hiPrec is replaced by access to field TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>access to local intPartA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>196</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>218</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intPartA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>234</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>242</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>250</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>258</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local z is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>266</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>272</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>274</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>275</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local fracPartB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>278</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local intFrac is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>279</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>286</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local tempB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>584ms</time></test></testsExecutionTime><patchExecutionTime>683ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>291</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local extra is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempC is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>access to local tempB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>access to local hiPrec is replaced by access to field TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>156</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>Substituted 709 with 710</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>175</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>Substituted 750 with 751</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>Substituted 750 with 751</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>199</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted 1024.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>222</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted 1024.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>229</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted 0.04168701738764507 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>236</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted 0.1666666505023083 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>244</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted 0.5000000000042687 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>252</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>260</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted -3.940510424527919E-20 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>292</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>464ms</time></test></testsExecutionTime><patchExecutionTime>573ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>276</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>281</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0524863881081478</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>294</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>330</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$ExpIntTable::access$000</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>187</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05459510904326141</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$ExpIntTable::access$100</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>205</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$ExpFracTable::access$200</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>211</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$ExpFracTable::access$300</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>176</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>360</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>160</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>294</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>330</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>160</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>294</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>330</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>156</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.046274481338274755</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>156</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0543526425198644</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>176</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.25</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>360</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0467780269724988</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>48</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>replaced call to doubleToRawLongBits with a call to doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>removed call to java/lang/Double::doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>49</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>41</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07254762501100116</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>41</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05638838744346009</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMinMaxDouble(org.apache.commons.math3.util.FastMathTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>40</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.0574484989621426</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06337242505244779</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07283570407292297</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>36</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>36</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>36</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>36</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>36</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>36</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local b is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>access to local a is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.08045179867091297</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to doubleToLongBits with a call to doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>698ms</time></test></testsExecutionTime><patchExecutionTime>788ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>581ms</time></test></testsExecutionTime><patchExecutionTime>670ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>60ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed call to java/lang/Double::doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed call to java/lang/Double::longBitsToDouble</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>639ms</time></test></testsExecutionTime><patchExecutionTime>724ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::ulp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3004</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ulp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.math3.special.GammaTest.testInvGamma1pm1(org.apache.commons.math3.special.GammaTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::ulp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolic(org.apache.commons.math3.util.FastMathTest)</name><time>61ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>63ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>63ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.special.GammaTest.testInvGamma1pm1(org.apache.commons.math3.special.GammaTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>214ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;BB)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;BB)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;BB)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;BB)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>162ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;BB)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;BB)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;I)V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;J)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>86</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>88</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>101</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>103</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::hashCode()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::hashCode()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::hashCode()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::hashCode()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::intValue()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::intValue()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::intValue()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::intValue()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>69ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10K()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10K()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10K()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10K()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to nans with an access to sign</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sign with an access to nans</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field field is replaced by access to local field</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to getIEEEFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::getRadixDigits()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>86</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>88</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>101</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>103</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>86</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>88</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>101</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>103</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>86</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>88</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>93</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>101</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>103</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>118ms</time></test></testsExecutionTime><patchExecutionTime>203ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>108</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 10000 with 10001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 10000 with 10001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>123</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>196ms</time></test></testsExecutionTime><patchExecutionTime>287ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::getRadixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>31</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>31</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable mant</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable nans</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable field</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable sign</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>68</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;J)V</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>125</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>289ms</time></test></testsExecutionTime><patchExecutionTime>476ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>249ms</time></test></testsExecutionTime><patchExecutionTime>435ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>224ms</time></test></testsExecutionTime><patchExecutionTime>404ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>143ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>214ms</time></test></testsExecutionTime><patchExecutionTime>396ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf(Ljava/lang/String;)I with a call to indexOf(I)I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>338</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>517</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>544</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>555</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sign with an access to nans</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>340</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>26</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to nans with an access to sign</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>246ms</time></test></testsExecutionTime><patchExecutionTime>340ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>31</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field field is replaced by access to local field</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>608</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field exp is replaced by access to local rsize</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>608</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field exp is replaced by access to local offset</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>608</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field exp is replaced by access to local p</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>398</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>222</index><block>28</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>225</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>238</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>245</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>246</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>250</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>251</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>262</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>263</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>272</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>273</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>286</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>287</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>327</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>328</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>245ms</time></test></testsExecutionTime><patchExecutionTime>342ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>336</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>352</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>353</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>363</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>364</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>373</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>374</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>378</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>258ms</time></test></testsExecutionTime><patchExecutionTime>361ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>379</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>392</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>393</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>394</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>411</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>419</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>440</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>459</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>467</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>470</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>471</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>476</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>490</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>228ms</time></test></testsExecutionTime><patchExecutionTime>330ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>492</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local fpdecimal is replaced by local s to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>501</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>502</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>504</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>507</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>508</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>510</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>513</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>514</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>525</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rsize to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>527</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rsize to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>534</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>548</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rsize to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>550</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>556</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>278ms</time></test></testsExecutionTime><patchExecutionTime>348ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>558</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>565</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>575</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>585</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>603</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>604</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local fpdecimal is replaced by local s to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>611</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>619</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local rsize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>127</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>291ms</time></test></testsExecutionTime><patchExecutionTime>388ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>398</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>222</index><block>28</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>225</index><block>28</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>238</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>245</index><block>29</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>246</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>250</index><block>30</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>251</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>262</index><block>33</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>263</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>274ms</time></test></testsExecutionTime><patchExecutionTime>380ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>272</index><block>34</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>273</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>286</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>287</index><block>35</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>327</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>328</index><block>37</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>336</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>352</index><block>41</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>353</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>363</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>364</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>373</index><block>43</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>374</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>378</index><block>44</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>379</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>392</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>393</index><block>46</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>394</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>411</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>419</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>440</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>459</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>467</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>470</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>471</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>476</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>490</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>239ms</time></test></testsExecutionTime><patchExecutionTime>343ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>501</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>502</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>504</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>507</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>508</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>510</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>513</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>514</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>525</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local offset to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>527</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>534</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>548</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>550</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>556</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>558</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>565</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>575</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>585</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>603</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>611</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>619</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>398</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>222</index><block>28</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>225</index><block>28</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>238</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>245</index><block>29</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>246</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>250</index><block>30</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>251</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>262</index><block>33</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>263</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>272</index><block>34</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>273</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>286</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>287</index><block>35</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>327</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>328</index><block>37</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>336</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>352</index><block>41</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>353</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>363</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>364</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local p to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>373</index><block>43</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>374</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>378</index><block>44</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>379</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>392</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>393</index><block>46</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>394</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>411</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>419</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>440</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>459</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>467</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>470</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>471</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>476</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>490</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>501</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>502</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>504</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>507</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>508</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>510</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local p to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>513</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>514</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>525</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local p to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>527</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local p to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>534</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>548</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local p to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>550</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>556</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>558</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>565</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>575</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>585</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>603</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>611</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>619</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>245</index><block>29</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>246</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>250</index><block>30</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>251</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>262</index><block>33</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>263</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>272</index><block>34</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>273</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>286</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>287</index><block>35</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>327</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>328</index><block>37</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>336</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>352</index><block>41</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>353</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>363</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>364</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local sciexp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>373</index><block>43</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>374</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>378</index><block>44</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>379</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>392</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>393</index><block>46</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>394</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>411</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>419</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>440</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>459</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>467</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>470</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>471</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>476</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>490</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>501</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>502</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>504</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>289ms</time></test></testsExecutionTime><patchExecutionTime>389ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>507</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>508</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>510</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local sciexp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>513</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>514</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>525</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sciexp to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>527</index><block>61</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>534</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>548</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sciexp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>550</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>556</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>558</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>565</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>575</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>585</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>603</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>611</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>619</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local sciexp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>327</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>328</index><block>37</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local q to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>336</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>352</index><block>41</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local q to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>353</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>363</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>364</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local q to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>373</index><block>43</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local q to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>374</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>378</index><block>44</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local q to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>379</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>392</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>393</index><block>46</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local q to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>394</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>411</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>419</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>440</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>459</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>467</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>470</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>471</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>476</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>490</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>501</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>502</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>504</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>507</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>508</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>510</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local q to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>513</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>514</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>525</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local decimalPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>527</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local decimalPos to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>534</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>548</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local decimalPos to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>550</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>556</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>558</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>230ms</time></test></testsExecutionTime><patchExecutionTime>321ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>565</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>575</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>585</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>603</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>611</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>619</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local decimalPos to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>327</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>328</index><block>37</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local significantDigits to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>336</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>352</index><block>41</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local significantDigits to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>353</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>363</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>364</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local significantDigits to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>373</index><block>43</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local significantDigits to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>374</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>378</index><block>44</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local significantDigits to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>379</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>392</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>393</index><block>46</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local sciexp is replaced by local significantDigits to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>394</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>411</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>419</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>440</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>459</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local significantDigits is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>467</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>270ms</time></test></testsExecutionTime><patchExecutionTime>365ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>470</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>471</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>476</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>490</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>501</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>502</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>504</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>507</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>508</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>510</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local significantDigits to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>513</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>514</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>525</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local q to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>527</index><block>61</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>534</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local p is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>548</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local q to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>550</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>556</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>558</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>565</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>575</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>585</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>603</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local decimalPos is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>611</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>619</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local q is replaced by local significantDigits to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to getIEEEFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>47</index><block>12</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to hashCode</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to compareTo</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to compareTo</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to compareTo</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to round with a call to align</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to intValue</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to compareToIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to compareToIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to compareToIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to round with a call to complement</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to log10K</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>124ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to log10</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to classify</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>133ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::getRadixDigits()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.Dfp::getRadixDigits()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>77</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>96</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::indexOf(Ljava/lang/String;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::indexOf(Ljava/lang/String;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::indexOf(Ljava/lang/String;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>247</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>252</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>264</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>274</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>354</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>380</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>395</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.Dfp::round(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>338</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>517</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>544</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>555</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>338</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>517</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>544</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>555</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>338</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>517</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>544</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>555</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>77</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>96</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>227ms</time></test></testsExecutionTime><patchExecutionTime>316ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>247</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>252</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>264</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>274</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>267ms</time></test></testsExecutionTime><patchExecutionTime>362ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>354</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>380</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>395</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to round(I)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>77</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>96</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>275ms</time></test></testsExecutionTime><patchExecutionTime>365ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>247</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>252</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>264</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>274</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>281ms</time></test></testsExecutionTime><patchExecutionTime>372ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>354</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>380</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>395</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to round(I)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>77</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>96</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>247</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>252</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>264</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>274</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>354</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>380</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>395</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to round(I)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>77</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>96</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>247</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>252</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>264</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>274</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>354</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>380</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>395</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to round(I)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>77</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>96</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to indexOf(Ljava/lang/String;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>247</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>252</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>264</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>274</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>354</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>380</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>395</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to round(I)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to org/apache/commons/math3/dfp/Dfp::round with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>249</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>254</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>377</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>382</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>472</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>521</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>529</index><block>61</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>551</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>614</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>269</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>283</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>367</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>399</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>402</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>405</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>220ms</time></test></testsExecutionTime><patchExecutionTime>306ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>416</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>434</index><block>52</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>533</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>539</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>595</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 4 to -4</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>598</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>130</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>135</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>199ms</time></test></testsExecutionTime><patchExecutionTime>288ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>228</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>237</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>241</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>248</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 49 with 50</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>253</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 57 with 58</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>265</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>275</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>279</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>295</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>300</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>301</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>306</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>307</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>312</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>313</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>318</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>319</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>323</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>340</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>342</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>344</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>355</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>359</index><block>42</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>376</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>381</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 57 with 58</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>412</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>420</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>430</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>458</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>463</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>465</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>478</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>489</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 400 with 401</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>493</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>351ms</time></test></testsExecutionTime><patchExecutionTime>440ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>496</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>519</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>524</index><block>61</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>528</index><block>61</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>535</index><block>62</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>256ms</time></test></testsExecutionTime><patchExecutionTime>345ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>546</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>560</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>562</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1000 with 1001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>566</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>569</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>571</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>576</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>579</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>238ms</time></test></testsExecutionTime><patchExecutionTime>329ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>581</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>586</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>589</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>606</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>621</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>623</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1000 with 1001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>341</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>343</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>345</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>464</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>466</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>491</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>494</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>495</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>497</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>503</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>509</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>515</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>520</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>547</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>561</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>563</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>567</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>570</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>572</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>573</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>577</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>580</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>582</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>583</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>587</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>590</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>591</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>605</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>607</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>622</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>624</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>298ms</time></test></testsExecutionTime><patchExecutionTime>389ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>229</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>293ms</time></test></testsExecutionTime><patchExecutionTime>377ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>249</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>254</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>261</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>266</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>276</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>289</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>330</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>346</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>356</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>377</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>382</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>410</index><block>47</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>413</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>421</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>431</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>439</index><block>53</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>441</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>449</index><block>55</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>472</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>479</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>521</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>529</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>551</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>614</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::getRadixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>238ms</time></test></testsExecutionTime><patchExecutionTime>326ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::getRadixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>240ms</time></test></testsExecutionTime><patchExecutionTime>326ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>96</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>126</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>227</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>247</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>252</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>264</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>274</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>289ms</time></test></testsExecutionTime><patchExecutionTime>374ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>288</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>329</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>354</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>380</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>395</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>625</index><block>66</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::round</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>78</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>97</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>121</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>136</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>229</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>261</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>266</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>276</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>289</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>330</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>346</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>356</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>290ms</time></test></testsExecutionTime><patchExecutionTime>375ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>410</index><block>47</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>413</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>421</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>431</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>439</index><block>53</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>441</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>449</index><block>55</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>479</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>78</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>97</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>121</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>136</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>229</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>261</index><block>32</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>266</index><block>33</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>276</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>274ms</time></test></testsExecutionTime><patchExecutionTime>357ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>289</index><block>35</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>330</index><block>37</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>346</index><block>39</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>356</index><block>41</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>283ms</time></test></testsExecutionTime><patchExecutionTime>372ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>410</index><block>47</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>413</index><block>48</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>421</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>254ms</time></test></testsExecutionTime><patchExecutionTime>338ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>431</index><block>51</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>439</index><block>53</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>441</index><block>54</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>449</index><block>55</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>479</index><block>57</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>249</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>254</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>377</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>382</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>472</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>521</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>529</index><block>61</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>551</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>614</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>335ms</time></test></testsExecutionTime><patchExecutionTime>421ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>249</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>254</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>377</index><block>43</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>382</index><block>44</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>472</index><block>56</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>521</index><block>60</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>529</index><block>61</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>551</index><block>63</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>614</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable mant</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable sign</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable nans</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable field</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>608</index><block>65</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>269</index><block>34</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>283</index><block>35</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>367</index><block>42</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>399</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>402</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>405</index><block>46</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>416</index><block>49</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>434</index><block>52</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>229ms</time></test></testsExecutionTime><patchExecutionTime>321ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>533</index><block>62</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>595</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment 4</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>598</index><block>64</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded using field field</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.field is replaced by the call to org.apache.commons.math3.dfp.Dfp::getField()Lorg/apache/commons/math3/dfp/DfpField;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to getRadixDigits with a call to getIEEEFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>131ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::getRadixDigits()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRadixDigits()I is guarded returning field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::getRadixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced int return with 0 for org/apache/commons/math3/dfp/Dfp::getRadixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>67</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>71</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>159</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>165</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>180</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>250</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded using field field</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>71</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using field mant</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>159</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using field mant</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>165</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using field mant</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>180</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded using field mant</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded using field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>250</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded using field field</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.field is replaced by the call to org.apache.commons.math3.dfp.Dfp::getField()Lorg/apache/commons/math3/dfp/DfpField;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>281ms</time></test></testsExecutionTime><patchExecutionTime>374ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>250</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.field is replaced by the call to org.apache.commons.math3.dfp.Dfp::getField()Lorg/apache/commons/math3/dfp/DfpField;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::hashCode()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::hashCode()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::intValue()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::intValue()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10K()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10K()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.Dfp.exp is replaced by the call to org.apache.commons.math3.dfp.Dfp::log10()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field exp is replaced by access to local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field exp is replaced by access to local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>166</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>168</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local r is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local n to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local r is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>194</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>157</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rh to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>166</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rh to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>168</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local r is replaced by local rh to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>97</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local i to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local rh to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local r is replaced by local rh to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local r is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>176</index><block>97</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local r to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local r to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local r is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local rh is replaced by local r to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>64</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>67</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>157</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>166</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>168</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>176</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>194</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>245</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>64</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>67</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>157</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>166</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>168</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>194</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>546ms</time></test></testsExecutionTime><patchExecutionTime>637ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>245</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>64</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>67</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>157</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>166</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>168</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>194</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>245</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field MAX_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>64</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>67</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>157</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>166</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>168</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>194</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>245</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field ERR_SCALE</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>64</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>67</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>157</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>166</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>168</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>173</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>181</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>182</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local r is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>183</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>194</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local rh is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>245</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local n is replaced by access to field exp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>70</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>158</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>164</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>179</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>213</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>229</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>249</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local this is replaced a call this.newInstance()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>252</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to setIEEEFlagsBits with a call to setIEEEFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>237ms</time></test></testsExecutionTime><patchExecutionTime>411ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField$RoundingMode::ordinal()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>71</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>159</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>298ms</time></test></testsExecutionTime><patchExecutionTime>392ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>165</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>180</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>250</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>71</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>159</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>165</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>180</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>250</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>71</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>159</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>165</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>180</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to mant is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>214</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>230</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to exp is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>250</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode; is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to ordinal()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>252</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to setIEEEFlagsBits(I)V is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode; is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to ordinal()I is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>252</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to setIEEEFlagsBits(I)V is guarded returning local n</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode; is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>264ms</time></test></testsExecutionTime><patchExecutionTime>353ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to ordinal()I is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>252</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to setIEEEFlagsBits(I)V is guarded returning field RADIX</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode; is guarded returning field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to ordinal()I is guarded returning field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>252</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to setIEEEFlagsBits(I)V is guarded returning field MIN_EXP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>252</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::setIEEEFlagsBits(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>216</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>232</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>190</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 5000 with 5001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>68</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 5000 with 5001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>76</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>81</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>82</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>150</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>154</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>174</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 10000 with 10001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>184</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 10000 with 10001</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>215</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted -32767 with -32766</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>231</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 32768 with 32769</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>251</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 16 with 17</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>255</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 16 with 17</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>259</index><block>105</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><block>97</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>95</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>79ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>195</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>666ms</time></test></testsExecutionTime><patchExecutionTime>753ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>232</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::getRoundingMode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField$RoundingMode::ordinal</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>256</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced int return with 0 for org/apache/commons/math3/dfp/Dfp::round</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>69</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>147</index><block>95</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>195</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>246</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>69</index><block>79</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>80</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>147</index><block>95</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>195</index><block>98</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>246</index><block>103</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>279ms</time></test></testsExecutionTime><patchExecutionTime>365ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>66</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>161</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>216</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>232</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>66</index><block>78</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>161</index><block>96</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>216</index><block>99</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>232</index><block>101</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>256</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>260</index><block>105</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>252</index><block>104</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 4 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 5 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_6</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 6 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_7</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>RemoveSwitch 7 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Dfp.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.Dfp</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(IZ)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(IZ)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(IZ)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(IZ)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(IZ)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(IZ)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>104</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>113</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>122</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>147</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>163</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>179</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>195</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>104</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>113</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>122</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>147</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>163</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>179</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>195</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>104</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>113</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>122</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>147</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>163</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>179</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>195</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>104</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>113</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>122</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>147</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>163</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>179</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>195</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>104</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>113</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>122</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>147</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>163</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>179</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>195</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;I)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>104</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>113</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>122</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>147</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>163</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>179</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>195</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.radixDigits is replaced by the call to org.apache.commons.math3.dfp.DfpField::setIEEEFlags(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.rMode is replaced by the call to org.apache.commons.math3.dfp.DfpField::setRoundingMode(Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::setIEEEFlags(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.radixDigits is replaced by the call to org.apache.commons.math3.dfp.DfpField::setIEEEFlagsBits(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::setIEEEFlagsBits(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.radixDigits is replaced by the call to org.apache.commons.math3.dfp.DfpField::computeStringConstants(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::computeStringConstants(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to radixDigits with an access to ieeeFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ROUND_HALF_EVEN with an access to ROUND_DOWN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>87</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>103</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2ReciprocalString with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>112</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3String with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>121</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3ReciprocalString with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>137</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>146</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>153</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>162</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>169</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>178</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>185</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>194</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln10String with an access to sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ROUND_HALF_EVEN with an access to ROUND_UP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>87</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>103</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2ReciprocalString with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>112</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>121</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3ReciprocalString with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>137</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>146</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>153</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>162</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>169</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>178</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>185</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>194</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln10String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ROUND_HALF_EVEN with an access to ROUND_HALF_UP</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>87</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>103</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2ReciprocalString with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>112</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>121</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3ReciprocalString with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>137</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>146</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>153</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>162</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>169</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>178</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>185</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>194</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln10String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ROUND_HALF_EVEN with an access to ROUND_HALF_DOWN</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>87</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>103</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2ReciprocalString with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>112</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>217ms</time></test></testsExecutionTime><patchExecutionTime>291ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>121</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3ReciprocalString with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>137</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>146</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>153</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>162</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>169</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>178</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>185</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>194</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln10String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ROUND_HALF_EVEN with an access to ROUND_HALF_ODD</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>87</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>103</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2ReciprocalString with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>112</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>121</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3ReciprocalString with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>137</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>146</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>153</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>162</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>169</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>178</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>185</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>194</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln10String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ROUND_HALF_EVEN with an access to ROUND_CEIL</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>87</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>103</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2ReciprocalString with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>112</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3String with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>121</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr3ReciprocalString with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>137</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to piString with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>146</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>153</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to eString with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>162</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>169</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln2String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>178</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>185</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln5String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>194</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ln10String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field radixDigits is replaced by access to local decimalDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field ieeeFlags is replaced by access to local decimalDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>138</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>154</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>170</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>186</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to org.apache.commons.math3.dfp.DfpField::split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>138</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>154</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>170</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>186</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>138</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>154</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>170</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>186</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>138</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>154</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>170</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>186</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>138</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>154</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>170</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>186</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>138</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>154</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>170</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>186</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>104</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>113</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>122</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>147</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>163</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>179</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>195</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 13 with 14</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 67 with 68</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 200 with 201</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>76</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>138</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>154</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>170</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>186</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>72</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>72</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>80</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/DfpField::computeStringConstants</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable radixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable rMode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable ieeeFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable zero</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable one</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable two</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>89</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable sqr2</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>96</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>105</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable sqr2Reciprocal</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>114</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable sqr3</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>123</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable sqr3Reciprocal</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>132</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable pi</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>139</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable piSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>148</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable e</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>155</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable eSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>164</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable ln2</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>171</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable ln2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>180</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable ln5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>187</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable ln5Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IZ)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>196</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable ln10</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to eString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to sqr2String with an access to ln2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local highPrecisionDecimalDigits is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local highPrecisionDecimalDigits is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local highPrecisionDecimalDigits is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local highPrecisionDecimalDigits is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local highPrecisionDecimalDigits is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>199ms</time></test></testsExecutionTime><patchExecutionTime>217ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>126ms</time></test></testsExecutionTime><patchExecutionTime>133ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>107ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>149ms</time></test></testsExecutionTime><patchExecutionTime>159ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>176ms</time></test></testsExecutionTime><patchExecutionTime>185ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>147ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>computeStringConstants</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>30</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>142ms</time></test></testsExecutionTime><patchExecutionTime>153ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded using field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.radixDigits is replaced by the call to org.apache.commons.math3.dfp.DfpField::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.radixDigits is replaced by the call to org.apache.commons.math3.dfp.DfpField::getIEEEFlags()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to radixDigits with an access to ieeeFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded returning field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced int return with 0 for org/apache/commons/math3/dfp/DfpField::getRadixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRadixDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRoundingMode</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to rMode is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRoundingMode</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to rMode is guarded using field rMode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRoundingMode</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.rMode is replaced by the call to org.apache.commons.math3.dfp.DfpField::getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRoundingMode</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to rMode is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRoundingMode</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to rMode is guarded returning field rMode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRoundingMode</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced return value with null for org/apache/commons/math3/dfp/DfpField::getRoundingMode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>getRoundingMode</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpField::getRoundingMode to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to ieeeFlags is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to ieeeFlags is guarded using local bits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to ieeeFlags is guarded using field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::setIEEEFlags(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::getIEEEFlags()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::setIEEEFlagsBits(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.ieeeFlags is replaced by the call to org.apache.commons.math3.dfp.DfpField::computeStringConstants(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to ieeeFlags with an access to radixDigits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field ieeeFlags is replaced by access to local bits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field ieeeFlags is replaced by access to local bits</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local bits is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local bits is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local bits is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local bits is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local bits is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to ieeeFlags is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to ieeeFlags is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to ieeeFlags is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 31 with 32</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced bitwise OR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>setIEEEFlagsBits</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed assignment to member variable ieeeFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>129</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>184</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>212ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>129</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>184</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>129</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>184</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>129</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>184</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>129</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>184</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>129</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>184</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/dfp/Dfp;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([CII)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to &#60;init&#62;([C)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded using local sp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded using field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.radixDigits is replaced by the call to org.apache.commons.math3.dfp.DfpField::getRadixDigits()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to field org.apache.commons.math3.dfp.DfpField.radixDigits is replaced by the call to org.apache.commons.math3.dfp.DfpField::getIEEEFlags()I</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced access to radixDigits with an access to ieeeFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field radixDigits is replaced by access to local sp</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field radixDigits is replaced by access to local sig</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to field radixDigits is replaced by access to local i</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local sp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>80</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>91</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sp is replaced by local sig to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>103</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sp is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>136</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>145</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>151</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>160</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sp is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>166</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sp to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>66</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>68</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>73</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local i to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>80</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sig is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>91</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sp is replaced by local i to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>98</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>103</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>136</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>145</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>151</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>160</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local sp is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>166</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>local i is replaced by local sig to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>60</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>66</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>68</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>73</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field ieeeFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>80</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>91</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field ieeeFlags</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>98</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>103</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>118</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>127</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>136</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>144</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr2String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>145</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>151</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>160</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>166</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INVALID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>175</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>188</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>60</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>66</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>68</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>80</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>98</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>103</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>118</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field piSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>127</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>136</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>144</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr2ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>145</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>151</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>160</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>166</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_DIV_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>175</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field piSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>188</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field piSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>49</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>60</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>66</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>68</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>80</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>98</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>103</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>118</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field eSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>127</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>136</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>144</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr3String</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>145</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>151</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>160</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>166</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_OVERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>175</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field eSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>188</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field eSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>49</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>60</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>66</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>68</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>80</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>98</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>103</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>118</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field ln2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>127</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>136</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>144</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field sqr3ReciprocalString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>145</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>151</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>160</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>166</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_UNDERFLOW</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>175</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field ln2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>188</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field ln2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>49</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>60</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>66</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>68</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>80</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sig is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>550</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>98</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>103</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>118</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field ln5Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>127</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>136</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>144</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local a is replaced by access to field piString</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>145</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>151</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>156</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>160</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local sp is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>166</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local i is replaced by access to field FLAG_INEXACT</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>175</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field ln5Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>188</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>access to local result is replaced by access to field ln5Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local a is replaced a call a.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local a is replaced a call a.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>144</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to the local a is replaced a call a.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>146</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>82</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the access to radixDigits is guarded returning field sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>146</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>146</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning field sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning field sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>146</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning field sqr2Split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to length()I is guarded returning field piSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning field piSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>146</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to charAt(I)C is guarded returning field piSplit</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>106</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>154</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>159</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>162</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>128</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>129</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>183</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>184</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to org/apache/commons/math3/dfp/Dfp::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>114</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 49 with 50</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 57 with 58</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 400 with 401</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>76</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>85</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 57 with 58</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>119</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>126</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>153</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>158</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 57 with 58</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>167</index><block>27</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>176</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>146</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>189</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced return value with null for org/apache/commons/math3/dfp/DfpField::split</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>63</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>87</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>108</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>63</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>87</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>108</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>52</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>101</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>106</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>154</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>159</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>162</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>52</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>101</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>106</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>154</index><block>24</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>159</index><block>25</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>162</index><block>26</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>189</index><block>28</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpField::split to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>111</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DfpField.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpField</mutatedClass><mutatedMethod>split</mutatedMethod><methodDescription>(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>114</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to setSeed(J)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to field org.apache.commons.math3.random.MersenneTwister.mt is replaced by the call to org.apache.commons.math3.random.MersenneTwister::setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to setSeed(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to setSeed(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to setSeed(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to setSeed(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to setSeed(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to org.apache.commons.math3.random.MersenneTwister::setSeed(J)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 624 with 625</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed call to org/apache/commons/math3/random/MersenneTwister::setSeed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Removed assignment to member variable mt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded using field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to field org.apache.commons.math3.random.MersenneTwister.mti is replaced by the call to org.apache.commons.math3.random.MersenneTwister::setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>56</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to field org.apache.commons.math3.random.MersenneTwister.mti is replaced by the call to org.apache.commons.math3.random.MersenneTwister::setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to field mti is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to field mti is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to field mti is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to field mti is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to field mti is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>56</index><block>2</block><killingTests/><suspValue>0.12309149097933272</suspValue><description>access to field mti is replaced by access to local seed</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to local seed is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to local longMT is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to local longMT is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>215ms</time></test></testsExecutionTime><patchExecutionTime>283ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to local longMT is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>46</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to local longMT is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to local seed is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>access to local seed is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the access to mti is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to org.apache.commons.math3.random.MersenneTwister::clear()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 624 with 625</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 1812433253 with 1812433254</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>217ms</time></test></testsExecutionTime><patchExecutionTime>279ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 30 with 31</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 4294967295 with 4294967296</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>2</block><killingTests/><suspValue>0.12309149097933272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>removed call to org/apache/commons/math3/random/MersenneTwister::clear</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Removed assignment to member variable mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>56</index><block>2</block><killingTests/><suspValue>0.12309149097933272</suspValue><description>Removed assignment to member variable mti</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>289ms</time></test></testsExecutionTime><patchExecutionTime>366ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced call to setSeed([I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>access to local seed is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>access to local seed is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>the call to setSeed([I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>the call to setSeed([I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>the call to setSeed([I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>the call to setSeed([I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>the call to setSeed([I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>the call to org.apache.commons.math3.random.MersenneTwister::setSeed([I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>Substituted 4294967295 with 4294967296</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>Replaced Unsigned Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15339299776947407</suspValue><description>removed call to org/apache/commons/math3/random/MersenneTwister::setSeed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed([I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to setSeed(I)V with a call to setSeed(J)V</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>109</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>131</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>163</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>170</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>184</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>193</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>224</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>242</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>260</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>109</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>131</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>163</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>170</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>184</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>193</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>224</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>242</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>260</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>214ms</time></test></testsExecutionTime><patchExecutionTime>280ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>109</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>131</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>163</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>170</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>184</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>193</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>224</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>242</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>260</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded using field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>109</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>131</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>163</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>170</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>184</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>193</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>224</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>242</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>260</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field mt is replaced by access to local seed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>6</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>local k is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>88</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l0 is replaced by local l1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>249ms</time></test></testsExecutionTime><patchExecutionTime>316ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>89</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l1 is replaced by local l0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>90</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l1 is replaced by local l0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>102</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>111</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l is replaced by local l0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>122</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>141</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>148</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local i to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>158</index><block>14</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>local k is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>164</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>171</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>194</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>208</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l0 is replaced by local l1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>209</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l1 is replaced by local l0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l1 is replaced by local l0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>225</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>226</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l is replaced by local l0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>236</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>252</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local j to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local k is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>74</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>102</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>111</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l is replaced by local l1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>122</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>141</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>148</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local j is replaced by local k to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>158</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local k is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>164</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>171</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>194</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>225</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>226</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local l is replaced by local l1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>236</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>252</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>local i is replaced by local k to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>6</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>access to local k is replaced by access to field N</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>74</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>88</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l0 is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>89</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l1 is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>90</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l1 is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>97</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>102</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>111</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>122</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>141</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>142</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field MAG01</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>148</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>158</index><block>14</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>access to local k is replaced by access to field N</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>164</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>171</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>194</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>208</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l0 is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>209</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l1 is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l1 is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>225</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>226</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local l is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>236</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field N</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>252</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field mt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field mt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>6</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>access to local k is replaced by access to field M</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>74</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>97</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field mt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>102</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>122</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>141</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>142</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local seed is replaced by access to field mt</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>158</index><block>14</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>access to local k is replaced by access to field M</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>164</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>171</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>194</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>225</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>236</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field M</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>6</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>access to local k is replaced by access to field mti</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>210ms</time></test></testsExecutionTime><patchExecutionTime>270ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>74</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>102</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>122</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>141</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local j is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>158</index><block>14</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>access to local k is replaced by access to field mti</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>164</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>171</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>194</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>225</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>236</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to local i is replaced by access to field mti</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to max with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>109</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>131</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>163</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>170</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>184</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>193</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>224</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>242</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>260</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>109</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>131</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>163</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>170</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>184</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>193</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>224</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>242</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>260</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>109</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>131</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>163</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>170</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>184</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>193</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>224</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>242</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>301ms</time></test></testsExecutionTime><patchExecutionTime>369ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>260</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to mt is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to setSeed(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>267</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to setSeed(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>267</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to setSeed(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>267</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to setSeed(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>267</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to setSeed(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>267</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to clear()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to org.apache.commons.math3.random.MersenneTwister::setSeed(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>267</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to org.apache.commons.math3.random.MersenneTwister::clear()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::max with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>173</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>238</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>118</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>119</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>26192ms</time></test></testsExecutionTime><patchExecutionTime>26207ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>233</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>255</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>22403ms</time></test></testsExecutionTime><patchExecutionTime>22413ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 19650218 with 19650219</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>303ms</time></test></testsExecutionTime><patchExecutionTime>363ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 624 with 625</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>8</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483648 with 2147483649</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>10</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483648 with 2147483649</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 30 with 31</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1664525 with 1664526</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 4294967295 with 4294967296</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>123</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 624 with 625</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>316ms</time></test></testsExecutionTime><patchExecutionTime>375ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>129</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 623 with 624</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>137</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>147</index><block>13</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 623 with 624</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>167</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>174</index><block>16</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483648 with 2147483649</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>177</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>186</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>190</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>195</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>223ms</time></test></testsExecutionTime><patchExecutionTime>284ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>199</index><block>18</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 2147483648 with 2147483649</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>202</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>211</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 30 with 31</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>214</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1566083941 with 1566083942</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>227</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 4294967295 with 4294967296</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>237</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 624 with 625</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>243</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>246</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 623 with 624</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>251</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>261</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>262</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Substituted -2147483648 with -2147483647</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise OR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise OR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>283ms</time></test></testsExecutionTime><patchExecutionTime>343ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise OR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise OR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>208ms</time></test></testsExecutionTime><patchExecutionTime>271ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>238</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>6</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>159</index><block>14</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>53</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>342ms</time></test></testsExecutionTime><patchExecutionTime>400ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>78</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>124</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>173</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>238</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>53</index><block>7</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>78</index><block>9</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>124</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>173</index><block>15</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>238</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed call to org/apache/commons/math3/random/MersenneTwister::setSeed</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>267</index><block>21</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed call to org/apache/commons/math3/random/MersenneTwister::clear</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>118</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>119</index><block>11</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>151</index><block>13</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>233</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MersenneTwister.java</sourceFile><mutatedClass>org.apache.commons.math3.random.MersenneTwister</mutatedClass><mutatedMethod>setSeed</mutatedMethod><methodDescription>([I)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>255</index><block>20</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitsStreamGenerator.java</sourceFile><mutatedClass>org.apache.commons.math3.random.BitsStreamGenerator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.04343722427630694</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitsStreamGenerator.java</sourceFile><mutatedClass>org.apache.commons.math3.random.BitsStreamGenerator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.04343722427630694</suspValue><description>Removed assignment to member variable nextGaussian</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>328ms</time></test></testsExecutionTime><patchExecutionTime>394ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitsStreamGenerator.java</sourceFile><mutatedClass>org.apache.commons.math3.random.BitsStreamGenerator</mutatedClass><mutatedMethod>clear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.04343722427630694</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitsStreamGenerator.java</sourceFile><mutatedClass>org.apache.commons.math3.random.BitsStreamGenerator</mutatedClass><mutatedMethod>clear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.04343722427630694</suspValue><description>Removed assignment to member variable nextGaussian</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(org.apache.commons.math3.util.FastMathTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
</mutations>
