<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>50</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>51</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>50</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>51</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>50</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>51</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>50</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>51</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><block>50</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>51</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>49</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>51</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.036131468676496206</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>removed call to org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05716619504750295</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>127</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_A with an access to EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_B with an access to EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>205</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_A with an access to EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>211</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_B with an access to EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>127</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_A with an access to EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_B with an access to EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>205</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_A with an access to EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>211</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_B with an access to EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>127</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_A with an access to EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_B with an access to EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>205</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_A with an access to EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>211</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_B with an access to EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>127</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_A with an access to FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_B with an access to FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>205</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_A with an access to FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>211</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_B with an access to FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>127</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_A with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_B with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>205</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_A with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>211</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_B with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>127</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_A with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>replaced access to EXP_INT_TABLE_B with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>205</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_A with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>211</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced access to EXP_FRAC_TABLE_B with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>127</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>access to field EXP_INT_TABLE_A is replaced by access to local hiPrec</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>access to field EXP_INT_TABLE_B is replaced by access to local hiPrec</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>205</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to field EXP_FRAC_TABLE_A is replaced by access to local hiPrec</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>211</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to field EXP_FRAC_TABLE_B is replaced by access to local hiPrec</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local extra is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>137</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>143</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>145</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local x to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>121ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>196</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>274</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local intFrac is replaced by local intVal to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>278</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local intFrac is replaced by local intVal to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local tempB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local extra is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempC is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>137</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local extra to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>143</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local extra to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>145</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local extra to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>196</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local extra to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local extra to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local tempB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local extra is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempA is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempC is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempB is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>143</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local intPartB to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>145</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>local intPartA is replaced by local intPartB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>196</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local intPartB to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local intPartB to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local tempB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local extra is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempA is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempC is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempB is replaced by local intPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local fracPartA to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local tempB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local extra is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempA is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempC is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempB is replaced by local intPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local x is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>local intPartA is replaced by local fracPartB to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local tempB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local extra is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempA is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempC is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempB is replaced by local fracPartA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local z is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local fracPartB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local epsilon is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local tempB is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>local extra is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>132ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempA is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempC is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local tempB is replaced by local fracPartB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local extra is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>56</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>137</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>143</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>196</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local tempB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local extra is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempC is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>329</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local extra is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>56</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>137</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>143</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>196</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>60ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local tempB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>129ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local extra is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempC is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>329</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local extra is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>56</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>137</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>143</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>196</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local tempB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local extra is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempC is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>329</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local extra is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>56</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>137</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>143</index><block>12</block><killingTests/><suspValue>0.0582222509739582</suspValue><description>access to local intPartA is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>124ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>196</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>217</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>161ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>218</index><block>16</block><killingTests/><suspValue>0.0510976130307596</suspValue><description>access to local intPartA is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>234</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>242</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>250</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>258</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local z is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>266</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>272</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>275</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local fracPartB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>279</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>286</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local tempB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>291</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local extra is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>320</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>322</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempC is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>324</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local tempB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>329</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local hiPrec is replaced by access to field FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>56</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local hiPrec is replaced by access to field FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>329</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>access to local hiPrec is replaced by access to field FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>124</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>Substituted 746 with 747</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>41</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Substituted 709 with 710</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 40.19140625 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 2.85040095144011776E17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Substituted 709 with 710</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>128</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Substituted 750 with 751</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>136</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Substituted 750 with 751</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>199</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted 1024.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>222</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted 1024.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>229</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted 0.04168701738764507 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>236</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted 0.1666666505023083 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>244</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted 0.5000000000042687 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>252</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>260</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted -3.940510424527919E-20 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>292</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>10</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>276</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>281</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>736</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>294</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>330</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>79</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>360</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>57</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>84</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>294</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>330</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>57</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>84</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>294</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>330</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05057217374241736</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05707301455353496</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>360</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0510976130307596</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>124</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.0582222509739582</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log with a call to expm1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log with a call to slowexp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log with a call to slowSin</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to log with a call to slowCos</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>removed call to org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.057928444636349226</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>350</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>replaced access to LN_MANT with an access to LN_SPLIT_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>350</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>replaced access to LN_MANT with an access to LN_QUICK_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>350</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>replaced access to LN_MANT with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>383</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>local hiPrec is replaced by local lnm to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>809</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>local hiPrec is replaced by local lnm to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>128</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>132</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>136</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>383</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>809</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>128</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>132</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>136</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>383</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>809</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_INT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>128</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>132</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>136</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>383</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>809</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>128</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>132</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>136</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>383</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>809</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field EXP_FRAC_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>136</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>access to local hiPrec is replaced by access to field FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>383</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>809</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local hiPrec is replaced by access to field FACT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>replaced call to doubleToLongBits with a call to doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>131</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>135</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>41</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>Substituted 1023 with 1024</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>Substituted 9218868437227405312 with 9218868437227405313</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>122</index><block>35</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.050898659855928764</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>129</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>Substituted 1.01 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>Substituted 0.99 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>352</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 4499201580859392 with 4499201580859393</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>354</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 42 with 43</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>362</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 4398046511103 with 4398046511104</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>365</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>367</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 4499201580859392 with 4499201580859393</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>375</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>379</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>609</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Substituted -0.16624882440418567 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>616</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Substituted 0.19999954120254515 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>624</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Substituted -0.2499999997677497 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>632</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Substituted 0.3333333333332802 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>640</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Substituted -0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>648</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>659</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0.6931470632553101 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>666</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>672</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>682</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>725</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 1.1730463525082348E-7 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>736</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 1.1730463525082348E-7 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>757</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>767</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>685</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>710</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>741</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>770</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>795</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>353</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>355</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>150ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>370</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>615</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>617</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>623</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>625</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>631</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>633</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>639</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>641</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>647</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>649</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>655</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05923488777590923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>662</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>674</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>680</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>684</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>695</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>701</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>707</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>709</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>720</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>728</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>729</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>735</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>739</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>740</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>751</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>759</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>765</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>769</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>780</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>786</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>792</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>794</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>805</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>827</index><block>48</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>35</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.050898659855928764</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>36</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.050898659855928764</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>384</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>810</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>21</block><killingTests/><suspValue>0.05076730825668096</suspValue><description>removed call to java/lang/Double::doubleToLongBits</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>828</index><block>48</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>74</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>123</index><block>35</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.050898659855928764</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>125</index><block>36</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.050898659855928764</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>137</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>384</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>810</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05076730825668096</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>74</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05083285677753489</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>123</index><block>35</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.050898659855928764</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>125</index><block>36</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.050898659855928764</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>137</index><block>39</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>384</index><block>43</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>810</index><block>47</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>131</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>135</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>131</index><block>37</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>135</index><block>38</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05862103817605492</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>828</index><block>48</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>53</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>56</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>53</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>56</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>53</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>56</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>53</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>56</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>53</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>10</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>69ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>56</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>55</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>56</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>54</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>52</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>56</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05018856132284956</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to sqrt with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced call to java/lang/Math::sqrt with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>removed call to java/lang/Math::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.03809696588797296</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>MethodNameMutator_0</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>MethodNameMutator_4</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>276</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to CONTINUED_FRACTION_NAN_DIVERGENCE with an access to ARGUMENT_OUTSIDE_DOMAIN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>276</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to CONTINUED_FRACTION_NAN_DIVERGENCE with an access to ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>276</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to CONTINUED_FRACTION_NAN_DIVERGENCE with an access to ARRAY_SUMS_TO_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>276</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to CONTINUED_FRACTION_NAN_DIVERGENCE with an access to ASSYMETRIC_EIGEN_NOT_SUPPORTED</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>276</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to CONTINUED_FRACTION_NAN_DIVERGENCE with an access to AT_LEAST_ONE_COLUMN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>276</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to CONTINUED_FRACTION_NAN_DIVERGENCE with an access to AT_LEAST_ONE_ROW</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local n is replaced by local maxIterations to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local maxIterations is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local n is replaced by local maxIterations to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local n is replaced by local maxIterations to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>86</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>89</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>107</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local i is replaced by local maxIterations to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>144</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local lastScaleFactor is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>148</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>151</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>165</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>168</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p0 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>173</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>177</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>179</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>180</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>182</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q0 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>185</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>219</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local p2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>222</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local q2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>263</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>264</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>269</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>288</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>289</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>297</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>298</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>303</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>304</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>311</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>312</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>315</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>316</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>322</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local n is replaced by local maxIterations to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>323</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local maxIterations is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local epsilon is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>72</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>86</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>89</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>107</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>144</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local lastScaleFactor is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>148</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>151</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>165</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>168</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p0 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>173</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>177</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>179</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>180</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>182</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q0 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>185</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>219</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local p2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>222</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local q2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>263</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>264</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>269</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>288</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>289</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>297</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>298</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>303</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>304</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>311</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>312</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>315</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>316</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local epsilon is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>62</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>72</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>86</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>89</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>107</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local i is replaced by local maxPower to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>144</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local lastScaleFactor is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>148</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>151</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>165</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>168</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p0 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>173</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>176</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>177</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>179</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>180</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>182</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q0 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>185</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>219</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>222</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>263</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>264</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>269</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>288</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>289</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>297</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>298</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>303</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>304</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>311</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>312</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>315</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>316</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local epsilon is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>62</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>72</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>86</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>89</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>107</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>144</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local lastScaleFactor is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>148</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>151</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>165</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>168</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>170</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p0 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>173</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>176</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>177</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>179</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>180</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>182</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q0 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>185</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>219</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>222</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>263</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>264</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>269</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>288</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>289</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>297</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>298</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>303</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>304</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>311</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>312</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>315</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>316</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local epsilon is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>62</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>72</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>75</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>86</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>89</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>68ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>107</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>144</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local lastScaleFactor is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>148</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>151</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>165</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>168</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>170</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p0 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>173</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>176</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>177</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>179</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>180</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>182</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q0 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>185</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>219</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>222</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>263</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>264</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>269</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>288</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>289</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>297</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>298</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>303</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>304</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>311</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>312</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>315</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>316</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local epsilon is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local x is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>62</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>72</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local a is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>75</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local b is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>86</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>89</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>107</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>144</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local lastScaleFactor is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>148</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scale is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>151</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local scaleFactor is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p1 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>165</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>168</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>170</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p0 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>173</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>176</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q1 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>177</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local lastScaleFactor is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>179</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local b is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>180</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local scaleFactor is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>182</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q0 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>185</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>219</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>222</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>263</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>264</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>269</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>288</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local r is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>289</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local relativeError is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>297</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>298</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>303</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>304</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p0 is replaced by local c to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local p1 is replaced by local c to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>311</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>312</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q0 is replaced by local c to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>315</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>316</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local q1 is replaced by local c to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>local c is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local relativeError is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local epsilon is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local b is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p0 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>72</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>75</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local b is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q0 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>86</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>89</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>106</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>107</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local b is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local scale is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>144</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local scaleFactor is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>148</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local scaleFactor is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local scale is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local b is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local p1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>165</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local lastScaleFactor is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local b is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>168</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local scaleFactor is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>170</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local p0 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>176</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local q1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>177</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local lastScaleFactor is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>179</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local b is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>180</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local scaleFactor is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>182</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local q0 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>219</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local p2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>222</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local q2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>263</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>264</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>269</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local r is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>288</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local r is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>128ms</time></test></testsExecutionTime><patchExecutionTime>239ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>289</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local c is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>297</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>298</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>303</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local p2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>311</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q1 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>315</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local q2 is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>access to local c is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to getA with a call to getB</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to getA with a call to getB</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to getB with a call to getA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>87</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>90</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>108</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to max with a call to pow</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>220</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>223</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>270</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>108</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to max with a call to atan2</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>108</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to max with a call to nextAfter</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>108</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to max with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to org.apache.commons.math.util.ContinuedFraction::getA(ID)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to org.apache.commons.math.util.ContinuedFraction::getA(ID)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to org.apache.commons.math.util.ContinuedFraction::getB(ID)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getB(ID)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getB(ID)D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getB(ID)D is guarded returning local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getA(ID)D is guarded returning field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>the call to getB(ID)D is guarded returning field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to org/apache/commons/math/util/ContinuedFraction::getA with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to org/apache/commons/math/util/ContinuedFraction::getA with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to org/apache/commons/math/util/ContinuedFraction::getB with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>108</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::max with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>324</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/math/ConvergenceException::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>241</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 1.7976931348623157E308 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>102</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>132</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>136</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>140</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>226</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>229</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>277</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>280</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>291</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><block>10</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>292</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>235</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>271</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>324</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed call to org/apache/commons/math/util/ContinuedFraction::getA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed call to org/apache/commons/math/util/ContinuedFraction::getA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed call to org/apache/commons/math/util/ContinuedFraction::getB</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>87</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>90</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>108</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math/util/FastMath::max</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>220</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>223</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>270</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed call to org/apache/commons/math/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/ContinuedFraction::evaluate</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>88</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>91</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>157</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>221</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>224</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>235</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>271</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>88</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>91</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>157</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>221</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>224</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>235</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>271</index><block>20</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>161</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>324</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>161</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>324</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/ContinuedFraction::evaluate</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ContinuedFraction.java</sourceFile><mutatedClass>org.apache.commons.math.util.ContinuedFraction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(DDI)D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.08574929257125441</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced access to HALF_LOG_2_PI with an access to GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced access to HALF_LOG_2_PI with an access to DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced access to HALF_LOG_2_PI with an access to C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced access to HALF_LOG_2_PI with an access to S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to field HALF_LOG_2_PI is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to field HALF_LOG_2_PI is replaced by access to local g</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to field HALF_LOG_2_PI is replaced by access to local sum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local g to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>46</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local g to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local g is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local g to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local g to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>87</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>local ret is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local g to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>46</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local g to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>53</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local g to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>58</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local g to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>61</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local g is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local g to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>137ms</time></test></testsExecutionTime><patchExecutionTime>203ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local sum is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>local x is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>53</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>61</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local g is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>87</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local ret is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>53</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>61</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local g is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>87</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local ret is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>53</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>61</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local g is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>87</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local ret is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>53</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>61</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local g is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>87</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local ret is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>138ms</time></test></testsExecutionTime><patchExecutionTime>210ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>53</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>61</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local g is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>87</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>access to local ret is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Substituted 4.7421875 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>136ms</time></test></testsExecutionTime><patchExecutionTime>198ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>removed call to org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>removed call to org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>88</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/special/Gamma::logGamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>118ms</time></test></testsExecutionTime><patchExecutionTime>177ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>5</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.07738232325341368</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/special/Gamma::logGamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>logGamma</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>49</index><block>4</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to regularizedGammaQ(DDDI)D with a call to regularizedGammaQ(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to regularizedGammaQ(DDDI)D with a call to regularizedGammaQ(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to regularizedGammaQ(DDDI)D with a call to regularizedGammaQ(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to regularizedGammaQ(DDDI)D with a call to regularizedGammaQ(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to regularizedGammaQ(DDDI)D with a call to regularizedGammaQ(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to regularizedGammaQ(DDDI)D with a call to regularizedGammaQ(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>13</block><killingTests>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf1960(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2807(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf3291(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2576(org.apache.commons.math.special.ErfTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local epsilon is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local epsilon is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>92</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>102</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>108</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local ret is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>13</block><killingTests>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf1960(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2807(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf3291(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2576(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>92</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>102</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>108</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local ret is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local epsilon is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>92</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>138ms</time></test></testsExecutionTime><patchExecutionTime>213ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>102</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>108</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>local ret is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local epsilon is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>92</index><block>18</block><killingTests/><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local an to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>102</index><block>18</block><killingTests/><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local n to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>108</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local n to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local epsilon is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>92</index><block>18</block><killingTests/><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local sum to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>102</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local sum to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local an is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>108</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local an to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local n is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local x is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local a is replaced by local sum to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>local sum is replaced by local an to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>13</block><killingTests>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf1960(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2807(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf3291(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2576(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local epsilon is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local epsilon is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local ret is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>13</block><killingTests>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf1960(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2807(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf3291(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2576(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local epsilon is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local epsilon is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local ret is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>13</block><killingTests>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf1960(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2807(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf3291(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2576(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local epsilon is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local epsilon is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local ret is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local epsilon is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local epsilon is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local ret is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>13</block><killingTests>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf1960(org.apache.commons.math.special.ErfTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2807(org.apache.commons.math.special.ErfTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf3291(org.apache.commons.math.special.ErfTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2576(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>73ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>46</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>access to local epsilon is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>62</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>67</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>71</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local epsilon is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>78</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>83</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>89</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>95</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>96</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>97</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>98</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>105</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>106</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local an is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>112</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local n is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>126</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>137</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>139</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>140</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>144</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>148</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>access to local sum is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>153</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>access to local ret is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to regularizedGammaQ with a call to regularizedGammaP</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>127</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>145</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to logGamma with a call to digamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>145</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to logGamma with a call to trigamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to exp with a call to expm1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>replaced call to org/apache/commons/math/special/Gamma::regularizedGammaQ with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>145</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/apache/commons/math/special/Gamma::logGamma with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>12</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>138</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>18</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>14</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>removed call to org/apache/commons/math/special/Gamma::regularizedGammaQ</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/apache/commons/math/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>127</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>141</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/apache/commons/math/special/Gamma::logGamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>147</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>154</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/special/Gamma::regularizedGammaP</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>128</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>128</index><block>21</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf1960(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testLargeValues(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2807(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf3291(org.apache.commons.math.special.ErfTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.special.ErfTest.testErf2576(org.apache.commons.math.special.ErfTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>77</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>86</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>8</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.10369516947304253</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>77</index><block>15</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>86</index><block>17</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaP</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>154</index><block>23</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/special/Gamma::regularizedGammaP</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DI)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DI)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DI)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DI)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DI)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DI)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to evaluate(DDI)D with a call to evaluate(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>59</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local epsilon is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local ret is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>87</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local ret is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local ret is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>25</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>59</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>66</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>67</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local epsilon is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local ret is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>87</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local ret is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local ret is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local x is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local ret is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>87</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local ret is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local ret is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>59</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>66</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>67</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local epsilon is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local ret is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local ret is replaced by access to field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>59</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>66</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>67</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local epsilon is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local ret is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local ret is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>25</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>59</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>66</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>67</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local epsilon is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local ret is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local ret is replaced by access to field HALF_LOG_2_PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>25</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>59</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>66</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>67</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local epsilon is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local ret is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local ret is replaced by access to field C_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>25</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>59</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>66</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>67</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local epsilon is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>74</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>76</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>77</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>81</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local a is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>85</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local ret is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>90</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local ret is replaced by access to field S_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>82</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to logGamma with a call to digamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>82</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to logGamma with a call to trigamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to exp with a call to expm1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the call to org.apache.commons.math.util.ContinuedFraction::evaluate(DDI)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the call to evaluate(DDI)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the call to evaluate(DDI)D is guarded returning local a</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the call to evaluate(DDI)D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the call to evaluate(DDI)D is guarded returning field GAMMA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the call to evaluate(DDI)D is guarded returning field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to org/apache/commons/math/util/ContinuedFraction::evaluate with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>82</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to org/apache/commons/math/special/Gamma::logGamma with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>60</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed call to org/apache/commons/math/special/Gamma$1::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>75</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed call to org/apache/commons/math/util/ContinuedFraction::evaluate</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed call to org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed call to org/apache/commons/math/special/Gamma::logGamma</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>84</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed call to org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>91</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/special/Gamma::regularizedGammaQ</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>25</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>29</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13130643285972254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>42</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>26</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>42</index><block>31</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma</mutatedClass><mutatedMethod>regularizedGammaQ</mutatedMethod><methodDescription>(DDDI)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>91</index><block>33</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/special/Gamma::regularizedGammaQ</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local mean is replaced by local sd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local sd is replaced by local mean to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>Substituted 1.0E-9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field mean is replaced by access to local mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field standardDeviation is replaced by access to local mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field solverAbsoluteAccuracy is replaced by access to local mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field mean is replaced by access to local sd</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field standardDeviation is replaced by access to local sd</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field solverAbsoluteAccuracy is replaced by access to local sd</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field mean is replaced by access to local inverseCumAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field standardDeviation is replaced by access to local inverseCumAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field solverAbsoluteAccuracy is replaced by access to local inverseCumAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local sd is replaced by local mean to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local mean is replaced by local sd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local sd is replaced by local mean to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local inverseCumAccuracy is replaced by local mean to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local sd is replaced by local inverseCumAccuracy to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local mean is replaced by local inverseCumAccuracy to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local sd is replaced by local inverseCumAccuracy to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local inverseCumAccuracy is replaced by local sd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>24</index><block>5</block><killingTests/><suspValue>0.35355339059327373</suspValue><description>catch type org/apache/commons/math/MaxIterationsExceededException is replaced with org/apache/commons/math/ConvergenceException</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testMath280(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testSampling(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testConsistency(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to mean is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to standardDeviation is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to mean is guarded using local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to standardDeviation is guarded using local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to mean is guarded using field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to standardDeviation is guarded using field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::getMean()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::getMean()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::getStandardDeviation()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::getStandardDeviation()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::getSolverAbsoluteAccuracy()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::getSolverAbsoluteAccuracy()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::sample()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::sample()D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to mean with an access to standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to standardDeviation with an access to mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to mean with an access to solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to standardDeviation with an access to solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to field mean is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to field standardDeviation is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to field standardDeviation is replaced by access to local dev</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local dev is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local dev is replaced by access to field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field SQRT2PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local dev is replaced by access to field SQRT2PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local dev is replaced by access to field mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local dev is replaced by access to field standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local dev is replaced by access to field solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to sqrt with a call to expm1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to mean is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to standardDeviation is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to mean is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to standardDeviation is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to mean is guarded returning field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to standardDeviation is guarded returning field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::sqrt with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to org/apache/commons/math/special/Erf::erf with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>111ms</time></test></testsExecutionTime><patchExecutionTime>176ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/apache/commons/math/special/Erf::erf</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/distribution/NormalDistributionImpl::cumulativeProbability</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/distribution/NormalDistributionImpl::cumulativeProbability</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>access to field pattern is replaced by access to local pattern</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>access to field arguments is replaced by access to local arguments</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the call to [Ljava.lang.Object;::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>removed call to [Ljava/lang/Object;::clone</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>120ms</time></test></testsExecutionTime><patchExecutionTime>184ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable pattern</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathException.java</sourceFile><mutatedClass>org.apache.commons.math.MathException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable arguments</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Removed assignment to member variable val$a</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded using local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded using field val$a</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to field val$a is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to local x is replaced by access to field val$a</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded returning field val$a</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/special/Gamma$1::getA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>118ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getA</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/special/Gamma$1::getA</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded using local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded using field val$a</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>access to field val$a is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>the access to val$a is guarded returning field val$a</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/special/Gamma$1::getB</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Gamma.java</sourceFile><mutatedClass>org.apache.commons.math.special.Gamma$1</mutatedClass><mutatedMethod>getB</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/special/Gamma$1::getB</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to regularizedGammaP(DDDI)D with a call to regularizedGammaP(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to regularizedGammaP(DDDI)D with a call to regularizedGammaP(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to regularizedGammaP(DDDI)D with a call to regularizedGammaP(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to regularizedGammaP(DDDI)D with a call to regularizedGammaP(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to regularizedGammaP(DDDI)D with a call to regularizedGammaP(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to regularizedGammaP(DDDI)D with a call to regularizedGammaP(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local ret is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local ret is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local ret is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to regularizedGammaP with a call to regularizedGammaQ</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to org/apache/commons/math/special/Gamma::regularizedGammaP with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 1.0E-15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 10000 with 10001</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>117ms</time></test></testsExecutionTime><patchExecutionTime>179ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/special/Gamma::regularizedGammaP</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/special/Erf::erf</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Erf.java</sourceFile><mutatedClass>org.apache.commons.math.special.Erf</mutatedClass><mutatedMethod>erf</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/special/Erf::erf</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>124ms</time></test></testsExecutionTime><patchExecutionTime>187ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>removed call to org/apache/commons/math/random/RandomDataImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>Substituted 1.0E-6 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>Removed assignment to member variable randomData</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.06131393394849658</suspValue><description>Removed assignment to member variable solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>148ms</time></test></testsExecutionTime><patchExecutionTime>206ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RandomDataImpl.java</sourceFile><mutatedClass>org.apache.commons.math.random.RandomDataImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05496497099293127</suspValue><description>Removed assignment to member variable rand</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RandomDataImpl.java</sourceFile><mutatedClass>org.apache.commons.math.random.RandomDataImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</killingTests><suspValue>0.05496497099293127</suspValue><description>Removed assignment to member variable secRand</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
</mutations>
