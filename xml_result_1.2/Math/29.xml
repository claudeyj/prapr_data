<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Substituted 16 with 17</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to field missingEntries is replaced by access to local missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to field mask is replaced by access to local expectedSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to field mask is replaced by access to local capacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>142ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to computeCapacity with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to computeCapacity with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to computeCapacity with a call to changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.15811388300841897</suspValue><description>replaced call to computeCapacity with a call to hashOf</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::computeCapacity with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>63</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to missingEntries is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to size is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to mask is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to count is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to size is guarded using local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to mask is guarded using local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to count is guarded using local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.size is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.mask is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.count is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to size with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to size with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to count with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>82</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to count with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to size with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to size with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to count with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>82</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>replaced access to count with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>access to field size is replaced by access to local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>access to field size is replaced by access to local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>access to field mask is replaced by access to local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>access to field mask is replaced by access to local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>access to field count is replaced by access to local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>82</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>access to field count is replaced by access to local length</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>2</block><killingTests/><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>128ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>79</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local this is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>80</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>local source is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>63</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to missingEntries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to size is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to mask is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to count is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>63</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to missingEntries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to size is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to mask is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to count is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>63</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to missingEntries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to size is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to mask is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>the access to count is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Removed assignment to member variable keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Removed assignment to member variable values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Removed assignment to member variable states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>64</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Removed assignment to member variable missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Removed assignment to member variable size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Removed assignment to member variable mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>82</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3216337604513384</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>4</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>changeIndexSign</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>49</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local powerOfTwo is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15944820103582016</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local powerOfTwo is replaced by local capacity to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local capacity is replaced by local powerOfTwo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15944820103582016</suspValue><description>local capacity is replaced by local powerOfTwo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local expectedSize is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local expectedSize is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local capacity is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local powerOfTwo is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local capacity is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15944820103582016</suspValue><description>access to local capacity is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local expectedSize is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local expectedSize is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local capacity is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local powerOfTwo is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local capacity is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>74ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15944820103582016</suspValue><description>access to local capacity is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local expectedSize is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local expectedSize is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local capacity is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local powerOfTwo is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local capacity is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>31</index><block>6</block><killingTests/><suspValue>0.15944820103582016</suspValue><description>access to local capacity is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to highestOneBit with a call to lowestOneBit</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to highestOneBit with a call to numberOfLeadingZeros</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to highestOneBit with a call to numberOfTrailingZeros</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to highestOneBit with a call to bitCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to highestOneBit with a call to reverse</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to highestOneBit with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to highestOneBit with a call to reverseBytes</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to ceil with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::ceil with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced call to java/lang/Integer::highestOneBit with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced float division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::ceil</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>removed call to java/lang/Integer::highestOneBit</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15944820103582016</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.15944820103582016</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to mask is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to mask is guarded using local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to mask is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.mask is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to field mask is replaced by access to local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to field mask is replaced by access to local hash</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>local hash is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>local key is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>16</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local hash is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local hash is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local hash is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local hash is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local hash is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to hashOf with a call to computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to hashOf with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to hashOf with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to hashOf with a call to changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::containsKey(II)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to mask is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the call to containsKey(II)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>23</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.39735970711951313</suspValue><description>replaced boolean return with false for org/apache/commons/math3/util/OpenIntToDoubleHashMap::containsKey</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.39735970711951313</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::containsKey</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.39735970711951313</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>the access to states is guarded using field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>the access to keys is guarded using field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>140ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>the access to states is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>the access to keys is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>23</index><block>63</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>replaced boolean return with false for org/apache/commons/math3/util/OpenIntToDoubleHashMap::containsKey</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>23</index><block>63</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>replaced boolean return with true for org/apache/commons/math3/util/OpenIntToDoubleHashMap::containsKey</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>62</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>63</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>59</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>60</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>61</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>containsKey</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>63</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1901172751573434</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>25</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>28</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to missingEntries is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to size is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to count is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>28</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to missingEntries is guarded using local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to size is guarded using local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to count is guarded using local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to keys is guarded using field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to states is guarded using field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded using field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>25</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded using field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>28</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to missingEntries is guarded using field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to size is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to count is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.size is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.count is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to size with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>37</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to size with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to count with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>45</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to count with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to size with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>37</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to size with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to count with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>45</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced access to count with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>28</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to field missingEntries is replaced by access to local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to field size is replaced by access to local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>37</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to field size is replaced by access to local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to field count is replaced by access to local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>45</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to field count is replaced by access to local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>397</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local previous is replaced by access to field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>5</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>5</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>26</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>5</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>26</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to keys is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to states is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>25</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>28</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to missingEntries is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to size is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to count is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>25</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>28</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to missingEntries is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to size is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to count is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to keys is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to states is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>25</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to values is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>28</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to missingEntries is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to size is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>42</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the access to count is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>49</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/OpenIntToDoubleHashMap::doRemove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/OpenIntToDoubleHashMap::doRemove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>37</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Removed assignment to member variable size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>doRemove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>45</index><block>64</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>9</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded using local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded using field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded using field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>124ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>28</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.mask is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>28</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>28</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field mask is replaced by access to local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded returning local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>6</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded returning local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded returning local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded returning field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded returning field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded returning field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>28</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local key is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local hash is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local mask is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local key is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local hash is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>46</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local key to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local mask is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local key to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local key to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local key is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>8</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local hash is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local mask is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>15</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>20</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>25</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>32</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local key is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>36</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local hash is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>46</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>58</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local mask to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local mask is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>66</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local mask to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>72</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local mask to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local key is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local mask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>15</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>20</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>25</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>32</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>36</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local hash is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>46</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>58</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>60</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local hash to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>63</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local hash to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local mask is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>66</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local hash to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>72</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local hash to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>46</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>58</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>60</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local index to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>63</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local index to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local mask is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>66</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local perturb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>72</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local index to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>76</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local key is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>58</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>60</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local perturb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>63</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local j is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local mask is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>66</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local j to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>72</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local perturb is replaced by local j to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>76</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local key is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>local index is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>local index is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local hash is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local mask is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>74ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local hash is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>46</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local perturb is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>58</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>access to local j is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>63</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>access to local j is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local mask is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local perturb is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>76</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local hash is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local mask is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>129ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>133ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local hash is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>46</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local perturb is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>58</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>access to local j is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>63</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>access to local j is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local mask is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local perturb is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>128ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>76</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local hash is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local mask is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>141ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>25</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>32</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>36</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local hash is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>46</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>51</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>57</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local perturb is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>58</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local j is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>63</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local j is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>64</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local mask is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>69</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local perturb is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>76</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>81</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>83</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>91</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>96</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to hashOf with a call to computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>37</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to changeIndexSign with a call to computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>replaced call to perturb with a call to computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to hashOf with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>37</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to changeIndexSign with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>replaced call to perturb with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to hashOf with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>37</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to changeIndexSign with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>replaced call to perturb with a call to changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to hashOf with a call to changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>140ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>37</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to changeIndexSign with a call to hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>replaced call to perturb with a call to hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>37</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::changeIndexSign with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::perturb with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>59</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::probe with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::probe</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>97</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>54</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>79</index><block>35</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>84</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>93</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>32</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.242535625036333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>54</index><block>34</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>79</index><block>35</block><killingTests/><suspValue>0.3396831102433787</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>84</index><block>36</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>93</index><block>38</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3273268353539886</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>30</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>33</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>findInsertionIndex</mutatedMethod><methodDescription>([I[BII)I</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>97</index><block>39</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3396831102433787</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the access to mask is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>37</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.24743582965269675</suspValue><description>the access to missingEntries is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the access to mask is guarded using local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the access to mask is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to states is guarded using field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>37</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.24743582965269675</suspValue><description>the access to missingEntries is guarded using field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.mask is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to field mask is replaced by access to local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to field mask is replaced by access to local hash</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>local hash is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>local key is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local hash is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local hash is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>31</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local hash is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>31</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local hash is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>31</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local hash is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>31</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to hashOf with a call to computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to hashOf with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to hashOf with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to hashOf with a call to changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::containsKey(II)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the access to mask is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to states is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>37</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.24743582965269675</suspValue><description>the access to missingEntries is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the access to mask is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to states is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>37</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.24743582965269675</suspValue><description>the access to missingEntries is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the call to containsKey(II)Z is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>the call to containsKey(II)Z is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::containsKey</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.24743582965269675</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/OpenIntToDoubleHashMap::get</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19487094073848926</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>137ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.24743582965269675</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/OpenIntToDoubleHashMap::get</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>434</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>434</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded using field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to keys is guarded using field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to values is guarded using field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded using field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>106</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>106</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>106</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to field mask is replaced by access to local oldLength</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>111</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to field keys is replaced by access to local oldKeys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>116</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to field values is replaced by access to local oldValues</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>121</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to field states is replaced by access to local oldStates</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>106</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to field mask is replaced by access to local newLength</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>111</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to field keys is replaced by access to local newKeys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>116</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to field values is replaced by access to local newValues</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>121</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to field states is replaced by access to local newStates</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>106</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to field mask is replaced by access to local newMask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newLength is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newLength is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>442</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newLength is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newLength is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local oldLength is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>59</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local oldStates is replaced by local newStates to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local oldKeys is replaced by local newKeys to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newKeys is replaced by local oldKeys to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newStates is replaced by local oldStates to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>71</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>local newMask is replaced by local oldLength to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>80</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newKeys is replaced by local oldKeys to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>86</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newValues is replaced by local oldValues to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>88</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local oldValues is replaced by local newValues to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>94</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newStates is replaced by local oldStates to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local oldLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>105</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>local newMask is replaced by local oldLength to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>110</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newKeys is replaced by local oldKeys to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newValues is replaced by local oldValues to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>120</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newStates is replaced by local oldStates to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local oldLength is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newMask is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>131ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>105</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newMask is replaced by local newLength to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local oldLength is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newMask is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local newMask to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local newMask is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>442</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>135ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>59</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldStates is replaced by access to field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>66</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldKeys is replaced by access to field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>72</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newKeys is replaced by access to field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>73</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newStates is replaced by access to field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>75</index><block>71</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>80</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newKeys is replaced by access to field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>86</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newValues is replaced by access to field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>88</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldValues is replaced by access to field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>94</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newStates is replaced by access to field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>105</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>110</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newKeys is replaced by access to field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newValues is replaced by access to field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>120</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newStates is replaced by access to field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>35</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>442</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>75</index><block>71</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>105</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>25</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>35</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>442</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>75</index><block>71</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>105</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>25</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>30</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>35</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>442</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>45</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>75</index><block>71</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>105</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>439</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>25</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>30</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>35</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>442</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>45</index><block>69</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newLength is replaced by access to field mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>54</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>55</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local oldLength is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>60</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>446</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>67</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>74</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>75</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>81</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>87</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>89</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>95</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>105</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>access to local newMask is replaced by access to field mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>434</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>434</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>15</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>434</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to keys is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to values is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to states is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>76</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>159ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>76</index><block>71</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>63</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>63</index><block>70</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>56</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>56</index><block>69</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>106</index><block>72</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>Removed assignment to member variable mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>111</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Removed assignment to member variable keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>116</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Removed assignment to member variable values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>growTable</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>121</index><block>72</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Removed assignment to member variable states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>local h is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>local h is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>local h is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>access to local h is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Substituted 20 with 21</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Substituted 7 with 8</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced Unsigned Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced Unsigned Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced Unsigned Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced Unsigned Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>24</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>hashOf</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>76</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>26</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>26</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced return value with null for org/apache/commons/math3/util/OpenIntToDoubleHashMap::iterator</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>26</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>mutated return of Object value for org/apache/commons/math3/util/OpenIntToDoubleHashMap::iterator to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>perturb</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local hash is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>perturb</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local hash is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>perturb</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local hash is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>perturb</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>perturb</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>27</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>perturb</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>27</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>perturb</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>27</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>local j is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>local j is replaced by local perturb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>local perturb is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local j is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local j is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local perturb is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local j is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local j is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local perturb is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local j is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local j is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local perturb is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>12</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap::probe</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>probe</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>48</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to missingEntries is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>28</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>39</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>46</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>53</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to count is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to missingEntries is guarded using local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded using local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to count is guarded using local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to missingEntries is guarded using field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>28</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to values is guarded using field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>39</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded using field keys</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>46</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded using field states</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>53</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to values is guarded using field values</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to count is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.size is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.count is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>65</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to size with an access to mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>68</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to size with an access to mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced access to count with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>85</index><block>68</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to count with an access to size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced access to size with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>68</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to size with an access to count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced access to count with an access to mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>85</index><block>68</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to count with an access to mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field missingEntries is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field size is replaced by access to local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>68</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>access to field size is replaced by access to local key</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field count is replaced by access to local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>85</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field count is replaced by access to local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field size is replaced by access to local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>68</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>access to field size is replaced by access to local index</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field count is replaced by access to local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>85</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to field count is replaced by access to local index</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>local index is replaced by local key to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>local previous is replaced by local value to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local value is replaced by local previous to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>425</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>88</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>local previous is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>47</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>55</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local value is replaced by access to field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>425</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>88</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local previous is replaced by access to field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>41</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>47</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>54</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>41</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>47</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>54</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>41</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>47</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>54</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>40</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>41</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>47</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>54</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced call to changeIndexSign with a call to computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced call to changeIndexSign with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced call to changeIndexSign with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced call to changeIndexSign with a call to hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::findInsertionIndex(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>72</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::shouldGrowTable()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to missingEntries is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>28</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to values is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>39</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>46</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>53</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to values is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to count is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to missingEntries is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>28</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to values is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>39</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>46</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>53</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to values is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to count is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to missingEntries is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>28</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to values is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>415</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>39</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to keys is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>46</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to states is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>53</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to values is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>65</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>82</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to count is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to findInsertionIndex(I)I is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>72</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to shouldGrowTable()Z is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>77</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to growTable()V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to findInsertionIndex(I)I is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>72</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to shouldGrowTable()Z is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>77</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to growTable()V is guarded returning local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>72</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to shouldGrowTable()Z is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>77</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to growTable()V is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to findInsertionIndex(I)I is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>72</index><block>67</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the call to shouldGrowTable()Z is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>77</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to growTable()V is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>77</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::growTable()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::changeIndexSign with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>65</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>66</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::findInsertionIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>72</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::shouldGrowTable</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>89</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/OpenIntToDoubleHashMap::put</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>66</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>73</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>66</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>73</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>65</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/OpenIntToDoubleHashMap::put</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>68</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::growTable</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>68</index><block>67</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Removed assignment to member variable size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(ID)D</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>85</index><block>68</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to containsKey(II)Z with a call to containsKey(I)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to mask is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to mask is guarded using local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to mask is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.mask is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to field mask is replaced by access to local key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to field mask is replaced by access to local hash</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>local hash is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>local key is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>local index is replaced by local key to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>local key is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>local index is replaced by local hash to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local hash is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local hash is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local hash is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>23</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local hash is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>23</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field size</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>8</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local hash is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local key is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>23</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>access to local index is replaced by access to field mask</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to hashOf with a call to computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to doRemove with a call to get</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to hashOf with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>24</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced call to doRemove with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to hashOf with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to hashOf with a call to changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::containsKey(II)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>24</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::doRemove(I)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to mask is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to mask is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to containsKey(II)Z is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the call to doRemove(I)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to containsKey(II)Z is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>24</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>the call to doRemove(I)D is guarded returning field missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::hashOf</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::containsKey</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::doRemove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/OpenIntToDoubleHashMap::remove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>50</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>51</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3535533905932738</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/OpenIntToDoubleHashMap::remove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded using field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.size is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>7</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap.mask is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::size()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to size with an access to mask</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>7</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>replaced access to size with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>7</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to size is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>the access to mask is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>20</index><block>75</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced boolean return with false for org/apache/commons/math3/util/OpenIntToDoubleHashMap::shouldGrowTable</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>20</index><block>75</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced boolean return with true for org/apache/commons/math3/util/OpenIntToDoubleHashMap::shouldGrowTable</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>74</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>75</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>73</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.17066403719657228</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>Replaced float multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>73</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>shouldGrowTable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>75</block><killingTests/><suspValue>0.17066403719657228</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.epsilon is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getSparsity()D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.epsilon is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::set(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>5</block><killingTests/><suspValue>0.42008402520840293</suspValue><description>local this is replaced by local v to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>local this is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>local v is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>local this is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>local v is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>local this is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>local v is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>replaced call to getDimension with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to org.apache.commons.math3.linear.OpenMapRealVector::getDimension()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to org.apache.commons.math3.linear.OpenMapRealVector::getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to epsilon is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to epsilon is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to epsilon is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::getDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::getEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>Removed assignment to member variable virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>Removed assignment to member variable entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>Removed assignment to member variable epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([Ljava/lang/Double;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([Ljava/lang/Double;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([Ljava/lang/Double;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([Ljava/lang/Double;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(IID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(IID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(IID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(IID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([Ljava/lang/Double;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([Ljava/lang/Double;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(IID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(IID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>Substituted 1.0E-12 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the access to entries is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='58'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.epsilon is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::set(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>73ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>186ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.entries is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='58'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>access to field epsilon is replaced by access to local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='68'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>2</block><killingTests/><suspValue>0.21004201260420147</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>171ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>the call to org.apache.commons.math3.linear.OpenMapRealVector::isDefaultValue(D)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::put(ID)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::put with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='68'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>2</block><killingTests/><suspValue>0.21004201260420147</suspValue><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::isDefaultValue</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>210ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.23791547571544325</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::put</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='68'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>2</block><killingTests/><suspValue>0.21004201260420147</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMapFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>Removed assignment to member variable virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>Removed assignment to member variable entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='58'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21004201260420147</suspValue><description>Removed assignment to member variable epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>the access to virtualSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>the access to virtualSize is guarded using field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.virtualSize is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getDimension()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.virtualSize is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::hashCode()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>the access to virtualSize is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>the access to virtualSize is guarded returning field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>replaced int return with 0 for org/apache/commons/math3/linear/OpenMapRealVector::getDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2013468165642073</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>the access to entries is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>the access to entries is guarded using field entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.entries is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>the access to entries is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>the access to entries is guarded returning field entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>replaced return value with null for org/apache/commons/math3/linear/OpenMapRealVector::getEntries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntries</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.408248290463863</suspValue><description>mutated return of Object value for org/apache/commons/math3/linear/OpenMapRealVector::getEntries to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to entries is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to entries is guarded using field entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.entries is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local index is replaced by access to field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local index is replaced by access to field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::get(I)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to entries is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to entries is guarded returning field DEFAULT_ZERO_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to checkIndex(I)V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to get(I)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to checkIndex(I)V is guarded returning field DEFAULT_ZERO_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to get(I)D is guarded returning field DEFAULT_ZERO_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to checkIndex(I)V is guarded returning field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to get(I)D is guarded returning field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math3.linear.OpenMapRealVector::checkIndex(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::get</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>12</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/linear/OpenMapRealVector::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/linear/OpenMapRealVector::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>the access to epsilon is guarded using local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>the access to epsilon is guarded using field DEFAULT_ZERO_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.epsilon is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getSparsity()D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='74'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>access to field epsilon is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='74'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>access to local value is replaced by access to field DEFAULT_ZERO_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>23ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>723ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='74'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>access to local value is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>52ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>331ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='74'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>184ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>the access to epsilon is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='74'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced boolean return with false for org/apache/commons/math3/linear/OpenMapRealVector::isDefaultValue</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>29ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>142ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced boolean return with true for org/apache/commons/math3/linear/OpenMapRealVector::isDefaultValue</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='74'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>54ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>207ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='74'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMisc(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testBasicFunctions(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testDataInOut(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testPredicates(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSerial(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosinePrecondition2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry(org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCosine(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfPreconditionMixedType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProduct(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideDimensionMismatch(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testCombinePreconditionSameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>isDefaultValue</mutatedMethod><methodDescription>(D)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.19867985355975656</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to entries is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to entries is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>31</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the access to entries is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to entries is guarded using field entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to entries is guarded using field entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>31</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the access to entries is guarded using field entries</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.entries is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.entries is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>31</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.linear.OpenMapRealVector.entries is replaced by the call to org.apache.commons.math3.linear.OpenMapRealVector::getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local index is replaced by access to field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local value is replaced by access to field DEFAULT_ZERO_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local index is replaced by access to field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local value is replaced by access to field DEFAULT_ZERO_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>access to local index is replaced by access to field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>access to local index is replaced by access to field virtualSize</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>access to local value is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>access to local value is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>14</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>23</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>30</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to remove with a call to get</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to org.apache.commons.math3.linear.OpenMapRealVector::isDefaultValue(D)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::put(ID)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::containsKey(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap::remove(I)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>31</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>15</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>31</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>31</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the access to entries is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to checkIndex(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to containsKey(I)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the call to remove(I)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to checkIndex(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to containsKey(I)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the call to remove(I)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to checkIndex(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>26</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to containsKey(I)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the call to remove(I)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to checkIndex(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to containsKey(I)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the call to remove(I)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to checkIndex(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to isDefaultValue(D)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>the call to put(ID)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>the call to containsKey(I)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>the call to remove(I)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>the call to org.apache.commons.math3.linear.OpenMapRealVector::checkIndex(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>replaced call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::put with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::isDefaultValue</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.29277002188455997</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::put</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::containsKey</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.5</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::remove</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.42008402520840293</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.OpenMapRealVector</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2847473987257497</suspValue><description>removed call to org/apache/commons/math3/linear/OpenMapRealVector::checkIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>catch type java/util/NoSuchElementException is replaced with java/lang/RuntimeException</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>498</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to referenceCount with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to next with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>498</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to referenceCount with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to advance()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to advance()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to advance()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to advance()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to advance()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::advance()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::access$100</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::advance</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Removed assignment to member variable this$0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Removed assignment to member variable referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Removed assignment to member variable next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>40</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>catch type java/lang/ArrayIndexOutOfBoundsException is replaced with java/lang/IndexOutOfBoundsException</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to referenceCount is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to referenceCount is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.referenceCount is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.next is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.next is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.current is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to referenceCount with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to next with an access to referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to current with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>28</index><block>17</block><killingTests/><suspValue>0.2773500981126145</suspValue><description>replaced access to next with an access to referenceCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>17</block><killingTests/><suspValue>0.2773500981126145</suspValue><description>replaced access to next with an access to current</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>47</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to next with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to current with an access to referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to referenceCount with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>replaced access to next with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>28</index><block>17</block><killingTests/><suspValue>0.2773500981126145</suspValue><description>replaced access to next with an access to current</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to current with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to referenceCount is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to referenceCount is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to referenceCount is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to this$0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>the access to next is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>51</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>Substituted -2 with -1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::access$100</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::access$400</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>35</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>35</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>52</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>52</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2773500981126145</suspValue><description>Removed assignment to member variable current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>32</index><block>17</block><killingTests/><suspValue>0.2773500981126145</suspValue><description>Removed assignment to member variable next</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>advance</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>47</index><block>20</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>Removed assignment to member variable next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to next is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to next is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.next is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to next with an access to referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to next with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to next is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced boolean return with false for org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::hasNext</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced boolean return with true for org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::hasNext</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to referenceCount is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to referenceCount is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.referenceCount is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.current is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.current is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced access to referenceCount with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced access to current with an access to referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced access to current with an access to referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced access to referenceCount with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced access to current with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced access to current with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to referenceCount is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to referenceCount is guarded returning field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded returning field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded returning field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to this$0 is guarded returning field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>the access to current is guarded returning field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::access$100</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::access$200</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>34</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::key</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>key</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>9</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.3061862178478973</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to referenceCount is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>29</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to referenceCount is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>29</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded using field referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.referenceCount is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.current is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to field org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.current is replaced by the call to org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator::key()I</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to referenceCount with an access to current</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to current with an access to referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to current with an access to referenceCount</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to referenceCount with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to current with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced access to current with an access to next</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to referenceCount is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to this$0 is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>29</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to this$0 is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>the access to current is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::access$100</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed call to org/apache/commons/math3/util/OpenIntToDoubleHashMap::access$300</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>34</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.2809757434745082</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator::value</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>333ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplySameType(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeDivideMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>371ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.04493153158175935</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local y is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>access to local y is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local y is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>access to local y is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local y is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>access to local y is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local y is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>24</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>access to local y is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local y is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>24</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>access to local y is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to floor with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::floor with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::ceil</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>17</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.10867853340033277</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>18</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.11274690420042432</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::ceil</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3347</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07552100405338862</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3347</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>62</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07552100405338862</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>Substituted 4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>Substituted -4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>64</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07552100405338862</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>52</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>11</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>52</index><block>12</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07155035936258235</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>14</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.07552100405338862</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>the access to the local this is replaced a call unmodifiableRealVector(this)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>replaced call to getDimension with a call to getMinIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>replaced call to getDimension with a call to getMaxIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>the call to org.apache.commons.math3.linear.RealVector::getDimension()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>removed call to org/apache/commons/math3/linear/RealVector::getDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkIndex</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.21483446221182986</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>local d is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>local n is replaced by local d to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>the access to the local this is replaced a call unmodifiableRealVector(this)</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>replaced call to getDimension with a call to getMinIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>replaced call to getDimension with a call to getMaxIndex</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>the call to org.apache.commons.math3.linear.RealVector::getDimension()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>the call to getDimension()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>removed call to org/apache/commons/math3/linear/RealVector::getDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVector.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.RealVector</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</killingTests><suspValue>0.26413527189768715</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.linear.SparseRealVectorTest.testEbeMultiplyMixedTypes(org.apache.commons.math3.linear.SparseRealVectorTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
</mutations>
