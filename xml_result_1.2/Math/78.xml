<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>Substituted 1.0E-6 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_0</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_0</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_0</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_0</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_0</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; is replaced by an instantiation of type java.lang.IllegalArgumentException using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_2</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; is replaced by an instantiation of type org.mudebug.prapr.reloc.commons.beanutils.BeanAccessLanguageException using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_3</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; is replaced by an instantiation of type org.netbeans.lib.cvsclient.response.ResponseFactory$IllegalArgumentException2 using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_4</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_4</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_4</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_4</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(D)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_4</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; is replaced by an instantiation of type java.lang.IllegalArgumentException using (Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>MethodNameMutator_6</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; is replaced by an instantiation of type org.mudebug.prapr.reloc.commons.beanutils.BeanAccessLanguageException using ()V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded using local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded using local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>access to field functionValueAccuracy is replaced by access to local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>access to field functionValueAccuracy is replaced by access to local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>access to field functionValueAccuracy is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>access to field functionValueAccuracy is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>access to field functionValueAccuracy is replaced by access to local ret</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>access to field functionValueAccuracy is replaced by access to local ret</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local min is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local max is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local min is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local max is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMin is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMax is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testBadEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local sign is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMin is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMax is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local min is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>89</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local max is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMin is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>99</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMax is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>local sign is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>114</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>116</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local max is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>117</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMax is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>118</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>119</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>121</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local ret is replaced by local min to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>local ret is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local min is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local max is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMin is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMax is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testBadEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local sign is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMin is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMax is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local min is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>89</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local max is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMin is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>99</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMax is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>106</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>local sign is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>114</index><block>8</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>115</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>116</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local max is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>117</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMax is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>118</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>119</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>121</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local ret is replaced by local max to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>local ret is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local max is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMin is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMax is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>35</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local sign is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMin is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>60</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMax is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>84</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local min is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>89</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local max is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMin is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>99</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMax is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>106</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>local sign is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>114</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>115</index><block>8</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>116</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local max is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>117</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMax is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>118</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>119</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local ret to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>121</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local ret is replaced by local yMin to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>140</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>local ret is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMin is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local yMax is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>35</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local sign is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMin is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>60</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMax is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>84</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local min is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>89</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local max is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMin is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>99</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMax is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>106</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>local sign is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>114</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>115</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>116</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local max is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>117</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMax is replaced by local yMin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>118</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>119</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>121</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local ret is replaced by local yMax to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>140</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>local ret is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>35</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>local sign is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMin is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>60</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>local yMax is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>84</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local min is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>89</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local max is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMin is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>99</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local yMax is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>106</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>local sign is replaced by local yMax to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>114</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>115</index><block>8</block><killingTests>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testColumnsPermutation(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>116</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local max is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>117</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMax is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>118</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local min is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>119</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local yMin is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>121</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local ret is replaced by local sign to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>140</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>local ret is replaced by local sign to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to org.apache.commons.math.analysis.UnivariateRealFunction::value(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to org.apache.commons.math.analysis.UnivariateRealFunction::value(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded returning local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>63</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>the access to functionValueAccuracy is guarded returning local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to clearResult()V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to verifyInterval(DD)V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to value(D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to value(D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to clearResult()V is guarded returning local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to verifyInterval(DD)V is guarded returning local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to value(D)D is guarded returning local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to value(D)D is guarded returning local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D is guarded returning local min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to clearResult()V is guarded returning local max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to verifyInterval(DD)V is guarded returning local max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to value(D)D is guarded returning local max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to value(D)D is guarded returning local max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D is guarded returning local max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::clearResult()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::verifyInterval(DD)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to org/apache/commons/math/analysis/UnivariateRealFunction::value with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to org/apache/commons/math/analysis/UnivariateRealFunction::value with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to org/apache/commons/math/analysis/solvers/BrentSolver::solve with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>93</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>107</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed call to org/apache/commons/math/analysis/UnivariateRealFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed call to org/apache/commons/math/analysis/UnivariateRealFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>85</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>90</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>102</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math/MathRuntimeException::createIllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>120</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::solve</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>141</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BrentSolver::solve</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>46</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>109</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>46</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>109</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>141</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/analysis/solvers/BrentSolver::solve</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::clearResult</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::verifyInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to maximalIterationCount is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to functionValueAccuracy is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>81</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to relativeAccuracy is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>86</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to absoluteAccuracy is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>105</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to result is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to maximalIterationCount is guarded using local i</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to functionValueAccuracy is guarded using local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>81</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to relativeAccuracy is guarded using local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>86</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to absoluteAccuracy is guarded using local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>105</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to result is guarded using local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>access to field maximalIterationCount is replaced by access to local i</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>access to field functionValueAccuracy is replaced by access to local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>81</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to field relativeAccuracy is replaced by access to local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>86</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to field absoluteAccuracy is replaced by access to local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>105</index><block>17</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>access to field result is replaced by access to local x0</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>access to field functionValueAccuracy is replaced by access to local y0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>81</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to field relativeAccuracy is replaced by access to local y0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>86</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to field absoluteAccuracy is replaced by access to local y0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>105</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>access to field result is replaced by access to local y0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>access to field functionValueAccuracy is replaced by access to local x1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>81</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to field relativeAccuracy is replaced by access to local x1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>86</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to field absoluteAccuracy is replaced by access to local x1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>105</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>access to field result is replaced by access to local x1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x0 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local delta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>91</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local dx is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>99</index><block>17</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>109</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local oldDelta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>111</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>114</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>133</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>134</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y0 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>139</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x0 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>21</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>145</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>152</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>159</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y0 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>160</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>165</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>166</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>172</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local dx is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>55ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x0 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>182</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>191</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>194</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>205</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>211</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>217</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>223</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>226</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>228</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>230</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local tolerance is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>231</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>237</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>241</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>249</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dx is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>251</index><block>27</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>254</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>255</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local oldDelta is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>259</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>260</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>263</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>264</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>266</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>269</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>270</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x0 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>273</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>274</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>277</index><block>28</block><killingTests>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local delta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>279</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>284</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>285</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local delta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>287</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>291</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local dx is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>297</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>299</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local tolerance is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>302</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>321</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>323</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>326</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>335</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y2 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>347</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>348</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x2 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>351</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y0 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>352</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y2 is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>355</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x1 is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>356</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>358</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>361</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local x0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>362</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local oldDelta is replaced by local x0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local delta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>43</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>51</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>52</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>55</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>74</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>91</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local dx is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>93</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>99</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>109</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local oldDelta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>111</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>114</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>133</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>134</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>139</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>145</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>152</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>159</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>160</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>165</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>166</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>172</index><block>23</block><killingTests>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local dx is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>182</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>191</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>194</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>205</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>211</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>217</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>223</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>226</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>228</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>230</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local tolerance is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>231</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>237</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>241</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>249</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dx is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>251</index><block>27</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>254</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>255</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local oldDelta is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>259</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>260</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>263</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>264</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>266</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>269</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>270</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x0 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>273</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>274</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>277</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local delta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>279</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>284</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>285</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local delta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>287</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>291</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local dx is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>297</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>299</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local tolerance is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>302</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>321</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>323</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>326</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>335</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y2 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>347</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>348</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x2 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>351</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>352</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y2 is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>355</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x1 is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>356</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>358</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>361</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local y0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>362</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local oldDelta is replaced by local y0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local delta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>23</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>35</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>40</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>43</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>51</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>52</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>55</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>74</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>91</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local dx is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>93</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>99</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>109</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local oldDelta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>111</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>114</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>133</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>134</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>139</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>140</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>145</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>152</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>159</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>160</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>165</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>166</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>172</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local dx is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>176</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>182</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>191</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>194</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>205</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>211</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>217</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>223</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>226</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>228</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>230</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local tolerance is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>231</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>237</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>241</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>249</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dx is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>251</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>254</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>255</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local oldDelta is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>259</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>260</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>263</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>264</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>266</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>269</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>270</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x0 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>273</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>274</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>277</index><block>28</block><killingTests>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local delta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>279</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>284</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>285</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local delta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>287</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>291</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local dx is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>297</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>299</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local tolerance is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>302</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>321</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>323</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>326</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>335</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y2 is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>347</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>348</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x2 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>351</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>352</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y2 is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>355</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>356</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>358</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>361</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local x1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>362</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local oldDelta is replaced by local x1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local delta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>23</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>31</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>35</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>40</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>43</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>51</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>52</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>55</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>74</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>91</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local dx is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>93</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>99</index><block>17</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>109</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local oldDelta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>111</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>114</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>133</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>134</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>139</index><block>21</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>140</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>145</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>152</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>159</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>160</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>165</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>166</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>172</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local dx is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>176</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>182</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>191</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>194</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>205</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>211</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>217</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>223</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>226</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>228</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>230</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local tolerance is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='116'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>231</index><block>25</block><killingTests/><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>134ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testColumnsPermutation(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>46ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>41ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testSmallDf(org.apache.commons.math.distribution.TDistributionTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.BetaDistributionTest.testCumulative(org.apache.commons.math.distribution.BetaDistributionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>690ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>237</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>241</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>249</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dx is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>251</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>254</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>255</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local oldDelta is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>259</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>260</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>263</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>264</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>266</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>269</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>270</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x0 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>273</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>274</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>277</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local delta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>279</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>284</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>285</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local delta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>287</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>291</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local dx is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>297</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>299</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local tolerance is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>302</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>321</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>323</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>326</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>335</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y2 is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>347</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>348</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x2 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>351</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>352</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y2 is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>355</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>356</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>358</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>361</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local y1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>362</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local oldDelta is replaced by local y1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local x0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local delta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>23</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>31</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>35</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>40</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>43</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>51</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>52</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>55</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>74</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x2 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>75</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>91</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local dx is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>93</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>99</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>109</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local oldDelta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>111</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>114</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>133</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>134</index><block>21</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>139</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>140</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x2 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>145</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>152</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>159</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>160</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>165</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>166</index><block>23</block><killingTests>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>172</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local dx is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>176</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>182</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>191</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>194</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>205</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>211</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>217</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>223</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>226</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>228</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>230</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local tolerance is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>231</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>237</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>241</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>249</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dx is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>251</index><block>27</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>254</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>255</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local oldDelta is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>259</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>260</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>263</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>264</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>266</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>269</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>270</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x0 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>273</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>274</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>277</index><block>28</block><killingTests>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local delta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>279</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>284</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>285</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local delta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>287</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>291</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local dx is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>297</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>299</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local tolerance is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>302</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>321</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>323</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>326</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>335</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y2 is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>347</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>348</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x2 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>351</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>352</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y2 is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>355</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>356</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>358</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>361</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>362</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local oldDelta is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>9</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local delta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>23</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>31</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>32</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>35</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>229</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>36</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x1 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>39</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>40</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local x2 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>43</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>44</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>47</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y1 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>51</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>52</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09325048082403138</suspValue><description>local y2 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>55</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>74</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>75</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>82</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>91</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local dx is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>93</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>99</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>109</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local oldDelta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>111</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>114</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>116</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>133</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>134</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local y0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>139</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>140</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local x2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>145</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>152</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local r3 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>159</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>160</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>165</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>166</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local y2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>172</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local dx is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>176</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local x0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>182</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>191</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>194</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r2 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local r3 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>205</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>211</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local p1 is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>217</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local p is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>223</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>226</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local dx is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>228</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>230</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local tolerance is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>231</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>237</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>241</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>249</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dx is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>251</index><block>27</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>254</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local delta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>255</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local oldDelta is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>259</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>260</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local oldDelta is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>263</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>264</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local p1 is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>266</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>local delta is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>269</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>270</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x0 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>273</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>274</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y0 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>277</index><block>28</block><killingTests>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local delta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>50ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>279</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local tolerance is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>284</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>285</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local delta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>287</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local x1 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>291</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>local dx is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>297</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>299</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local tolerance is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>302</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local x1 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>321</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>323</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>326</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>335</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>local y2 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>347</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>348</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x2 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>351</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>352</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local y2 is replaced by local delta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>355</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>356</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local x0 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>358</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>361</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local delta is replaced by local y2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>362</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>local oldDelta is replaced by local y2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to max with a call to IEEEremainder</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to max with a call to atan2</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to max with a call to pow</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to max with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to max with a call to hypot</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to max with a call to copySign</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to max with a call to nextAfter</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>322</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the call to org.apache.commons.math.analysis.UnivariateRealFunction::value(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to maximalIterationCount is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to functionValueAccuracy is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>81</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to relativeAccuracy is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>86</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to absoluteAccuracy is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>105</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to result is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to maximalIterationCount is guarded returning local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>the access to functionValueAccuracy is guarded returning local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>81</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to relativeAccuracy is guarded returning local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>86</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the access to absoluteAccuracy is guarded returning local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>59ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>105</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to result is guarded returning local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>101</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the call to setResult(DI)V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>322</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the call to value(D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>101</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the call to setResult(DI)V is guarded returning local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>322</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the call to value(D)D is guarded returning local x0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>101</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the call to setResult(DI)V is guarded returning local y0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>322</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>the call to value(D)D is guarded returning local y0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>101</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::setResult(DI)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to java/lang/Math::max with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>322</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to org/apache/commons/math/analysis/UnivariateRealFunction::value with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>119</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>208</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>245</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>281</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>294</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>329</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>338</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>365</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>151</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>183</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>192</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>199</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>206</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>222</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>225</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Substituted 1.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>238</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>248</index><block>27</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>292</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>298</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>327</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>330</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>333</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>336</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>339</index><block>36</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>342</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>212</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>218</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><block>22</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>23</block><killingTests>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>23</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='116'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><block>26</block><killingTests/><suspValue>0.09284766908852593</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>50ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>35ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>22ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>33ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>37ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>40ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>33ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>23ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>320ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>22ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testColumnsPermutation(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>56ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>55ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>49ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>52ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>30ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testSmallDf(org.apache.commons.math.distribution.TDistributionTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.distribution.BetaDistributionTest.testCumulative(org.apache.commons.math.distribution.BetaDistributionTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>103ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>1738ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><block>27</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><block>29</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>300</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><block>31</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><block>38</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>208</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>245</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>281</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>294</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>329</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>338</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>344</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>83</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>87</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to java/lang/Math::max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>110</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>117</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>233</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>243</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>278</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>322</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to org/apache/commons/math/analysis/UnivariateRealFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>106</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/analysis/solvers/BrentSolver::solve</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>344</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>344</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>60</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>95</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>113</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>119</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>208</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>245</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>281</index><block>28</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>294</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>329</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>338</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>13</block><killingTests>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>60</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09128709291752768</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>95</index><block>16</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>113</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>119</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>208</index><block>23</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>245</index><block>26</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>281</index><block>28</block><killingTests>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testValues(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testColumnsPermutation(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testDeprecated(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.ChiSquareDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BrentSolverTest.testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>294</index><block>30</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>329</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>338</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>106</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/analysis/solvers/BrentSolver::solve</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentSolver.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.BrentSolver</mutatedClass><mutatedMethod>solve</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::setResult</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>replaced access to maxCheckInterval with an access to t0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to maxIterationCount with an access to nextAction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to t0 with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to g0 with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to g0Positive with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to pendingEvent with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to pendingEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to previousEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>60</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to increasing with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>replaced access to maxCheckInterval with an access to g0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to t0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to g0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to g0Positive with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to pendingEvent with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to pendingEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to previousEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>60</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to increasing with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>replaced access to maxCheckInterval with an access to pendingEventTime</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to t0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to g0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to g0Positive with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to pendingEvent with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to pendingEventTime with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to previousEventTime with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>60</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to increasing with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>replaced access to maxCheckInterval with an access to previousEventTime</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field handler is replaced by access to local handler</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>access to field maxCheckInterval is replaced by access to local maxCheckInterval</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field convergence is replaced by access to local maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field maxIterationCount is replaced by access to local maxIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field t0 is replaced by access to local maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field g0 is replaced by access to local maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field pendingEventTime is replaced by access to local maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field previousEventTime is replaced by access to local maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>65</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field nextAction is replaced by access to local maxIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>access to field maxCheckInterval is replaced by access to local convergence</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field convergence is replaced by access to local convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field t0 is replaced by access to local convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field g0 is replaced by access to local convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field pendingEventTime is replaced by access to local convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field previousEventTime is replaced by access to local convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>local maxCheckInterval is replaced by local convergence to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>local convergence is replaced by local maxCheckInterval to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testMinStep(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testWrongDerivative(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testMinStep(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>49ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable handler</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable maxCheckInterval</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable maxIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>60</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventHandler;DDI)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>65</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable nextAction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/analysis/UnivariateRealFunction;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/analysis/UnivariateRealFunction;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/analysis/UnivariateRealFunction;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/analysis/UnivariateRealFunction;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/analysis/UnivariateRealFunction;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/analysis/UnivariateRealFunction;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DDD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D with a call to solve(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to maxCheckInterval is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>86</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0Positive is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to convergence is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to maxIterationCount is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>76ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEvent is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to maxCheckInterval is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to convergence is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to maxIterationCount is guarded using local n</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to maxCheckInterval is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>86</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded using field handler</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0Positive is guarded using field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to convergence is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to maxIterationCount is guarded using field maxIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEvent is guarded using field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>17</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>28ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>29ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>69ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>28ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>149ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>785ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.maxCheckInterval is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.g0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>86</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.handler is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventHandler()Lorg/apache/commons/math/ode/events/EventHandler;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.g0Positive is replaced by the call to org.apache.commons.math.ode.events.EventState::stop()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.maxIterationCount is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxIterationCount()I</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEvent is replaced by the call to org.apache.commons.math.ode.events.EventState::stop()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>17</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>38ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>53ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>42ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>38ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>106ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>21ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>51ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>30ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>36ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>85ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>57ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>37ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>37ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>50ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>23ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>150ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>22ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>23ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>107ms</time></test></testsExecutionTime><patchExecutionTime>1618ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>21</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.maxCheckInterval is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.g0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>66ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.maxCheckInterval is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.g0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.t0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.previousEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.convergence is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to forward with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>17</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>42ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>35ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>24ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>48ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>36ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>39ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>57ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>24ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>36ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>57ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>35ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>57ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>30ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>21ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>63ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>49ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>65ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>324ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>22ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>82ms</time></test></testsExecutionTime><patchExecutionTime>1831ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>21</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced access to maxCheckInterval with an access to convergence</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0Positive with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>119</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to increasing with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to convergence with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to maxIterationCount with an access to nextAction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEvent with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>237</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEvent with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to forward with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>17</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>43ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>34ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>43ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>81ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>54ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>48ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>21ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>50ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>41ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>35ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>40ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>61ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>266ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>20ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>112ms</time></test></testsExecutionTime><patchExecutionTime>1725ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to maxCheckInterval with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0Positive with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>119</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to increasing with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEvent with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>237</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEvent with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to forward with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>17</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>40ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>68ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>29ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>29ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>21ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>301ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>983ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to maxCheckInterval with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0Positive with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>119</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to increasing with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEvent with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>237</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEvent with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to maxCheckInterval with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to maxCheckInterval with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to convergence with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field maxCheckInterval is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field g0 is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field convergence is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field convergence is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field convergence is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field maxIterationCount is replaced by access to local n</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field pendingEventTime is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field pendingEventTime is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local t1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field g0 is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field convergence is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field convergence is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field convergence is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field maxIterationCount is replaced by access to local i</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field pendingEventTime is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field pendingEventTime is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field g0 is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field convergence is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field convergence is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field convergence is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field pendingEventTime is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field pendingEventTime is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field convergence is replaced by access to local ta</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local h is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local t1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local gb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local gb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ga is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local ta is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local t1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local t1 is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local h is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local h to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local gb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local gb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ga is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local ta is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local h to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local t1 is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local h is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ta to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local gb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local gb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>62ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ga is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local ta is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local t1 is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local h is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ga to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>57ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local tb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local gb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local gb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ga is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local ta is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local ga to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local t1 is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>local gb is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local gb is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ga is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local tb is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local ta is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local ta is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local tb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local t1 is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local ta is replaced by local root to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local root is replaced by local gb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>local t1 is replaced by local root to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local n is replaced by access to field maxIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local i is replaced by access to field maxIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>70</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local n is replaced by access to field maxIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local h is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local gb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local gb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ga is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local ta is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t1 is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>56ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>30ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>59ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>33ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>37ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>37ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>30ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>312ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>972ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local n is replaced by access to field nextAction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local i is replaced by access to field nextAction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>70</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local n is replaced by access to field nextAction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local h is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local gb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local gb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ga is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local ta is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t1 is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local h is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local gb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local gb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ga is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local ta is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t1 is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>66ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>59ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>52ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>35ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>152ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>965ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local h is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>77</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local gb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local gb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ga is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local ta is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t1 is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t1 is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>75</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local h is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>81</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>87</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>96</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local gb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>110</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local gb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>111</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ga is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>148</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>149</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local tb is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to local ta is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>168</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>169</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local ta is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>202</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>212</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local root is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t1 is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to the local interpolator is replaced a call interpolator.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to the local interpolator is replaced a call interpolator.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>51</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to the local interpolator is replaced a call interpolator.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>80</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to the local interpolator is replaced a call interpolator.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>88</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to the local interpolator is replaced a call interpolator.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>125</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to the local interpolator is replaced a call interpolator.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to getCurrentTime with a call to getPreviousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to max with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>89</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to getInterpolatedState with a call to getInterpolatedDerivatives</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to getCurrentTime with a call to getInterpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>19</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>28ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>65ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>45ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>35ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>63ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>23ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>50ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>33ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>68ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>54ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>28ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>66ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>29ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>222ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>79ms</time></test></testsExecutionTime><patchExecutionTime>1565ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>23</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>69ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>45ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>43ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>24ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>55ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>22ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>70ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>48ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>36ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>52ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>65ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>33ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>43ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>24ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>264ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>29ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>34ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>25ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>30ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>1699ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>19</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>23</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>28ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>28ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>262ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>838ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to ceil with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.sampling.StepInterpolator::isForward()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.sampling.StepInterpolator::getCurrentTime()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>52</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.sampling.StepInterpolator::isForward()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>89</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.sampling.StepInterpolator::getInterpolatedState()[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>90</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.events.EventHandler::g(D[D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to maxCheckInterval is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>86</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0Positive is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to convergence is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to maxIterationCount is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEvent is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to maxCheckInterval is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to t0 is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>55</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>59</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to convergence is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>86</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0Positive is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>138</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to convergence is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>144</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to maxIterationCount is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>173</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>178</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>182</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>197</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>201</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to previousEventTime is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>206</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>217</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEvent is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>225</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to convergence is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to isForward()Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to getCurrentTime()D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>52</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to isForward()Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>89</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to getInterpolatedState()[D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>90</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>139</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setAbsoluteAccuracy(D)V is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>145</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setMaximalIterationCount(I)V is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to isForward()Z is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to getCurrentTime()D is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>52</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to isForward()Z is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>89</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to getInterpolatedState()[D is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>90</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>139</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setAbsoluteAccuracy(D)V is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>145</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setMaximalIterationCount(I)V is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded returning field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to isForward()Z is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to getCurrentTime()D is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>52</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to isForward()Z is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>89</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to getInterpolatedState()[D is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>90</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>139</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setAbsoluteAccuracy(D)V is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>145</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setMaximalIterationCount(I)V is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D is guarded returning field pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.sampling.StepInterpolator::setInterpolatedTime(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>139</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::setAbsoluteAccuracy(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>145</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.apache.commons.math.analysis.solvers.BrentSolver::setMaximalIterationCount(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to java/lang/Math::ceil with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to java/lang/Math::max with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>90</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to org/apache/commons/math/ode/events/EventHandler::g with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to org/apache/commons/math/analysis/solvers/BrentSolver::solve with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to org/apache/commons/math/analysis/solvers/BrentSolver::solve with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>66ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>242</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced boolean return with false for org/apache/commons/math/ode/events/EventState::evaluateStep</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>242</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced boolean return with true for org/apache/commons/math/ode/events/EventState::evaluateStep</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>151</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>175</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>184</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>208</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>227</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>126</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/ode/events/EventState$1::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>132</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>256</index><block>24</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>11</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>236</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>240</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>60</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='88'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>41ms</time></test><test><name>org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)</name><time>14ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>49ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>44ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)</name><time>47ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>22ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>15ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>55ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>31ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)</name><time>17ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>50ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>73ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)</name><time>36ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)</name><time>47ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>37ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>13ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>32ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>68ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>7ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>33ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>33ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)</name><time>151ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)</name><time>26ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)</name><time>19ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)</name><time>16ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>12ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>27ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)</name><time>9ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>28ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)</name><time>81ms</time></test></testsExecutionTime><patchExecutionTime>1734ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>175</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>184</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>208</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/sampling/StepInterpolator::isForward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/sampling/StepInterpolator::getCurrentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to java/lang/Math::ceil</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to java/lang/Math::max</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/sampling/StepInterpolator::isForward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>89</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/sampling/StepInterpolator::getInterpolatedState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>90</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/events/EventHandler::g</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::solve</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::solve</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>180</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>204</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>223</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>106</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>218</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>106</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>218</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>99</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>113</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>151</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>175</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>184</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>208</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>227</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>99</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>113</index><block>10</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>151</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>175</index><block>14</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>184</index><block>15</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>208</index><block>18</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>227</index><block>20</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>242</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/sampling/StepInterpolator::setInterpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>12</block><killingTests>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::setAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>232ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>256ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>145</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/analysis/solvers/BrentSolver::setMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Removed assignment to member variable forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>119</index><block>12</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>213</index><block>19</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Removed assignment to member variable pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>evaluateStep</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>237</index><block>22</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Removed assignment to member variable pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEventTime is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to pendingEventTime with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to pendingEventTime is guarded returning field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/ode/events/EventState::getEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>getEventTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>33</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/events/EventState::getEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded using local tStart</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded using field handler</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded using field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.handler is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventHandler()Lorg/apache/commons/math/ode/events/EventHandler;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.g0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getMaxCheckInterval()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.g0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getConvergence()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.g0 is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0Positive with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0Positive with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0Positive with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local tStart</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field g0 is replaced by access to local tStart</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field g0 is replaced by access to local tStart</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local tStart is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.events.EventHandler::g(D[D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to g0 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to org/apache/commons/math/ode/events/EventHandler::g with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/events/EventHandler::g</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Removed assignment to member variable t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Removed assignment to member variable g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>reinitializeBegin</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Removed assignment to member variable g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to pendingEvent is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>35</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to handler is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to forward is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded using field handler</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to pendingEvent is guarded using field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded using field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>35</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to handler is guarded using field handler</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded using field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to forward is guarded using field g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.handler is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventHandler()Lorg/apache/commons/math/ode/events/EventHandler;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.pendingEvent is replaced by the call to org.apache.commons.math.ode.events.EventState::stop()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.increasing is replaced by the call to org.apache.commons.math.ode.events.EventState::stop()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>35</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.handler is replaced by the call to org.apache.commons.math.ode.events.EventState::getEventHandler()Lorg/apache/commons/math/ode/events/EventHandler;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.increasing is replaced by the call to org.apache.commons.math.ode.events.EventState::stop()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.ode.events.EventState.forward is replaced by the call to org.apache.commons.math.ode.events.EventState::stop()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>34</block><killingTests>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to pendingEvent with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to increasing with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to g0Positive with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to increasing with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to forward with an access to g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>34</block><killingTests>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to pendingEvent with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to increasing with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to g0Positive with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to increasing with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to forward with an access to pendingEvent</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>34</block><killingTests>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to t0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to g0 with an access to previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced access to pendingEvent with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to previousEventTime with an access to pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to increasing with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to g0Positive with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to increasing with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced access to forward with an access to increasing</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>34</block><killingTests>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field t0 is replaced by access to local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to field g0 is replaced by access to local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to field previousEventTime is replaced by access to local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>34</block><killingTests/><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field maxCheckInterval</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field maxCheckInterval</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field convergence</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>23</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>36</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>23</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>36</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>access to local t is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>23</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>36</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>access to local t is replaced by access to field pendingEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to org.apache.commons.math.ode.events.EventHandler::g(D[D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>49</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the call to org.apache.commons.math.ode.events.EventHandler::eventOccurred(D[DZ)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to pendingEvent is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>35</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to forward is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to pendingEvent is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>35</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to forward is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the access to pendingEvent is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>29</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>35</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to handler is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to increasing is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to forward is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>49</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the call to eventOccurred(D[DZ)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>49</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the call to eventOccurred(D[DZ)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>49</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the call to eventOccurred(D[DZ)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>49</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the call to eventOccurred(D[DZ)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>the call to g(D[D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>49</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the call to eventOccurred(D[DZ)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>replaced call to org/apache/commons/math/ode/events/EventHandler::g with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>36</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed call to org/apache/commons/math/ode/events/EventHandler::g</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed call to org/apache/commons/math/ode/events/EventHandler::eventOccurred</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>43</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>43</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>34</block><killingTests>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Removed assignment to member variable t0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>10ms</time></test><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)</name><time>11ms</time></test><test><name>org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10660035817780521</suspValue><description>Removed assignment to member variable g0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Removed assignment to member variable previousEventTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Removed assignment to member variable g0Positive</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState</mutatedClass><mutatedMethod>stepAccepted</mutatedMethod><methodDescription>(D[D)V</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>50</index><block>37</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>Removed assignment to member variable nextAction</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to previousTime with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to currentTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to h with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to interpolatedTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to currentState with an access to interpolatedState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to interpolatedState with an access to currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to interpolatedDerivatives with an access to currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>48</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to finalized with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to forward with an access to finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to dirtyState with an access to finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to previousTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to currentTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to h with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to interpolatedTime with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to currentState with an access to interpolatedDerivatives</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to interpolatedState with an access to interpolatedDerivatives</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to interpolatedDerivatives with an access to interpolatedState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>48</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to finalized with an access to dirtyState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to forward with an access to dirtyState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to dirtyState with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to previousTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to currentTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to h with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to interpolatedTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field currentState is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field interpolatedState is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field interpolatedDerivatives is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>48</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field finalized is replaced by access to local forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field forward is replaced by access to local forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field dirtyState is replaced by access to local forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable interpolatedState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable interpolatedDerivatives</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>48</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DZ)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable dirtyState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to currentTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to currentTime is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to currentTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to currentTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to currentTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to currentTime is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to currentTime is guarded returning field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/ode/sampling/AbstractStepInterpolator::getCurrentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getCurrentTime</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/sampling/AbstractStepInterpolator::getCurrentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to dirtyState is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to currentTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedState is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using local oneMinusThetaH</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using local oneMinusThetaH</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using local oneMinusThetaH</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to dirtyState is guarded using field finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to currentTime is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedTime is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedState is guarded using field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.dirtyState is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::isForward()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedState()[D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedDerivatives()[D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to dirtyState with an access to finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to currentTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to interpolatedTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to dirtyState with an access to finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to interpolatedState with an access to currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to dirtyState with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to currentTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to interpolatedTime with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to dirtyState with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to interpolatedState with an access to interpolatedDerivatives</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to currentTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to interpolatedTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced access to h with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to field h is replaced by access to local oneMinusThetaH</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to field h is replaced by access to local oneMinusThetaH</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to field h is replaced by access to local oneMinusThetaH</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local theta is replaced by local oneMinusThetaH to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>local oneMinusThetaH is replaced by local theta to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local theta is replaced by access to field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local theta is replaced by access to field currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local theta is replaced by access to field h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local theta is replaced by access to field interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>access to local oneMinusThetaH is replaced by access to field interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to dirtyState is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to currentTime is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedTime is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedState is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to dirtyState is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to currentTime is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedTime is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to h is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>47</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the access to interpolatedState is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>38</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the call to computeInterpolatedStateAndDerivatives(DD)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>38</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the call to computeInterpolatedStateAndDerivatives(DD)V is guarded returning field currentState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>38</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the call to computeInterpolatedStateAndDerivatives(DD)V is guarded returning field interpolatedState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>38</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::computeInterpolatedStateAndDerivatives(DD)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>replaced return value with null for org/apache/commons/math/ode/sampling/AbstractStepInterpolator::getInterpolatedState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>mutated return of Object value for org/apache/commons/math/ode/sampling/AbstractStepInterpolator::getInterpolatedState to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>removed call to org/apache/commons/math/ode/sampling/AbstractStepInterpolator::computeInterpolatedStateAndDerivatives</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>getInterpolatedState</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.1</suspValue><description>Removed assignment to member variable dirtyState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to forward is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to forward is guarded using field finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::isForward()Z</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>replaced access to forward with an access to finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>replaced access to forward with an access to dirtyState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to forward is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>the access to forward is guarded returning field finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>replaced boolean return with false for org/apache/commons/math/ode/sampling/AbstractStepInterpolator::isForward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>replaced boolean return with true for org/apache/commons/math/ode/sampling/AbstractStepInterpolator::isForward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>isForward</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10540925533894598</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to interpolatedTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to dirtyState with an access to finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to interpolatedTime with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to dirtyState with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to interpolatedTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to field interpolatedTime is replaced by access to local time</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local time is replaced by access to field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local time is replaced by access to field currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local time is replaced by access to field h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local time is replaced by access to field interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Removed assignment to member variable interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>setInterpolatedTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Removed assignment to member variable dirtyState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to previousTime with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to previousTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to previousTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>shift</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Removed assignment to member variable previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to previousTime is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded using local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to previousTime is guarded using local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to previousTime is guarded using field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getPreviousTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::storeTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getCurrentTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to field org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime is replaced by the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::getInterpolatedTime()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to previousTime with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to h with an access to previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to finalized with an access to forward</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to previousTime with an access to h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to h with an access to currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to finalized with an access to dirtyState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to currentTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to previousTime with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced access to h with an access to interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to field currentTime is replaced by access to local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to field currentTime is replaced by access to local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to field previousTime is replaced by access to local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to field h is replaced by access to local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field previousTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>access to local t is replaced by access to field interpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>replaced call to setInterpolatedTime with a call to storeTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to previousTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to previousTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to currentTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the access to previousTime is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>the call to org.apache.commons.math.ode.sampling.AbstractStepInterpolator::setInterpolatedTime(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>removed call to org/apache/commons/math/ode/sampling/AbstractStepInterpolator::setInterpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Removed assignment to member variable currentTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Removed assignment to member variable h</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.AbstractStepInterpolator</mutatedClass><mutatedMethod>storeTime</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.09578262852211514</suspValue><description>Removed assignment to member variable finalized</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to defaultFunctionValueAccuracy is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to defaultFunctionValueAccuracy is guarded using local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to field org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.defaultFunctionValueAccuracy is replaced by the call to org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl::setFunctionValueAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to field org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.defaultFunctionValueAccuracy is replaced by the call to org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to field org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.functionValueAccuracy is replaced by the call to org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl::setFunctionValueAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to field org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.defaultFunctionValueAccuracy is replaced by the call to org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl::getFunctionValue()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to field org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.defaultFunctionValueAccuracy is replaced by the call to org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl::getFunctionValueAccuracy()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to defaultFunctionValueAccuracy with an access to functionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to defaultFunctionValueAccuracy with an access to functionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to functionValueAccuracy with an access to defaultFunctionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to defaultFunctionValueAccuracy with an access to result</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to defaultFunctionValueAccuracy with an access to result</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to functionValueAccuracy with an access to result</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to defaultFunctionValueAccuracy with an access to functionValue</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to defaultFunctionValueAccuracy with an access to functionValue</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>replaced access to functionValueAccuracy with an access to functionValue</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>access to field defaultFunctionValueAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>access to field defaultFunctionValueAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>access to field functionValueAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to defaultFunctionValueAccuracy is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to defaultFunctionValueAccuracy is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>the access to defaultFunctionValueAccuracy is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>Substituted 1.0E-15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>Removed assignment to member variable resultComputed</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>Removed assignment to member variable defaultFunctionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>Removed assignment to member variable functionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>clearResult</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08770580193070293</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>clearResult</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08770580193070293</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>clearResult</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08770580193070293</suspValue><description>Removed assignment to member variable iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>clearResult</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.08770580193070293</suspValue><description>Removed assignment to member variable resultComputed</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>the access to field org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.result is replaced by the call to org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl::setFunctionValueAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>replaced access to result with an access to functionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>replaced access to result with an access to defaultFunctionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>replaced access to result with an access to functionValue</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>access to field result is replaced by access to local newResult</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>access to field iterationCount is replaced by access to local iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>access to local newResult is replaced by access to field functionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>access to local newResult is replaced by access to field defaultFunctionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>access to local newResult is replaced by access to field result</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>access to local newResult is replaced by access to field functionValue</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>Removed assignment to member variable result</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>Removed assignment to member variable iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>setResult</mutatedMethod><methodDescription>(DI)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0842151921066519</suspValue><description>Removed assignment to member variable resultComputed</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>local lower is replaced by local upper to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>local upper is replaced by local lower to be used</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local lower is replaced by access to field functionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local upper is replaced by access to field functionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local lower is replaced by access to field defaultFunctionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local upper is replaced by access to field defaultFunctionValueAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local lower is replaced by access to field result</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local upper is replaced by access to field result</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local lower is replaced by access to field functionValue</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local upper is replaced by access to field functionValue</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariateRealSolverImpl.java</sourceFile><mutatedClass>org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl</mutatedClass><mutatedMethod>verifyInterval</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventState;Lorg/apache/commons/math/ode/sampling/StepInterpolator;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable this$0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/ode/events/EventState;Lorg/apache/commons/math/ode/sampling/StepInterpolator;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable val$interpolator</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>MethodNameMutator_3</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to factory method org.apache.commons.math.ode.events.EventState.access$000(Lorg/apache/commons/math/ode/events/EventState;)Lorg/apache/commons/math/ode/events/EventHandler; is replaced by an instantiation of type org.apache.commons.math.ode.nonstiff.StepProblem using (DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>catch type org/apache/commons/math/ode/DerivativeException is replaced with org/apache/commons/math/MathException</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded using field val$interpolator</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded using field val$interpolator</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to getInterpolatedState with a call to getInterpolatedDerivatives</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.apache.commons.math.ode.sampling.StepInterpolator::getInterpolatedState()[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.apache.commons.math.ode.events.EventHandler::g(D[D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to this$0 is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded returning local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to this$0 is guarded returning local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to val$interpolator is guarded returning local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to getInterpolatedState()[D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to g(D[D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to setInterpolatedTime(D)V is guarded returning local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to getInterpolatedState()[D is guarded returning local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to g(D[D)D is guarded returning local t</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.apache.commons.math.ode.sampling.StepInterpolator::setInterpolatedTime(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced call to org/apache/commons/math/ode/events/EventHandler::g with argument</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/ode/events/EventState::access$000</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/ode/sampling/StepInterpolator::getInterpolatedState</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/ode/events/EventHandler::g</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/ode/events/EventState$1::value</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/ode/events/EventState$1::value</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EventState.java</sourceFile><mutatedClass>org.apache.commons.math.ode.events.EventState$1</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/apache/commons/math/ode/sampling/StepInterpolator::setInterpolatedTime</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to defaultRelativeAccuracy is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to defaultRelativeAccuracy is guarded using local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.defaultAbsoluteAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setAbsoluteAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.defaultRelativeAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setAbsoluteAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.absoluteAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setAbsoluteAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.defaultRelativeAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::getAbsoluteAccuracy()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.relativeAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setAbsoluteAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.defaultMaximalIterationCount is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setMaximalIterationCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.maximalIterationCount is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setMaximalIterationCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.iterationCount is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setMaximalIterationCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.defaultAbsoluteAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setRelativeAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.defaultRelativeAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setRelativeAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.absoluteAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setRelativeAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.defaultRelativeAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::getRelativeAccuracy()D</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.relativeAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setRelativeAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultAbsoluteAccuracy with an access to absoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultRelativeAccuracy with an access to absoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to absoluteAccuracy with an access to relativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultRelativeAccuracy with an access to absoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to relativeAccuracy with an access to absoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultMaximalIterationCount with an access to maximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to maximalIterationCount with an access to defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to iterationCount with an access to maximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultAbsoluteAccuracy with an access to relativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultRelativeAccuracy with an access to relativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to absoluteAccuracy with an access to defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultRelativeAccuracy with an access to relativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to relativeAccuracy with an access to defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultMaximalIterationCount with an access to iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to maximalIterationCount with an access to iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to iterationCount with an access to defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultAbsoluteAccuracy with an access to defaultRelativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultRelativeAccuracy with an access to defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to absoluteAccuracy with an access to defaultRelativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to defaultRelativeAccuracy with an access to defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>replaced access to relativeAccuracy with an access to defaultRelativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field defaultAbsoluteAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field defaultRelativeAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field absoluteAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field defaultRelativeAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field relativeAccuracy is replaced by access to local defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field defaultMaximalIterationCount is replaced by access to local defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field maximalIterationCount is replaced by access to local defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>access to field iterationCount is replaced by access to local defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to defaultRelativeAccuracy is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to defaultRelativeAccuracy is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>the access to defaultRelativeAccuracy is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Substituted 1.0E-14 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Removed assignment to member variable defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Removed assignment to member variable defaultRelativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Removed assignment to member variable absoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Removed assignment to member variable relativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Removed assignment to member variable defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Removed assignment to member variable maximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.07453559924999299</suspValue><description>Removed assignment to member variable iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.absoluteAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setAbsoluteAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.absoluteAccuracy is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setRelativeAccuracy(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to absoluteAccuracy with an access to relativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to absoluteAccuracy with an access to defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest.testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveBadParameters(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to absoluteAccuracy with an access to defaultRelativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest.testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveBadParameters(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field absoluteAccuracy is replaced by access to local accuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest.testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveBadParameters(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to local accuracy is replaced by access to field absoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest.testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveBadParameters(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to local accuracy is replaced by access to field relativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to local accuracy is replaced by access to field defaultAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest.testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveBadParameters(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to local accuracy is replaced by access to field defaultRelativeAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setAbsoluteAccuracy</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable absoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest.testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest.testSolveBadParameters(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetAbsoluteAccuracy(org.apache.commons.math.analysis.solvers.BisectionSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to field org.apache.commons.math.ConvergingAlgorithmImpl.maximalIterationCount is replaced by the call to org.apache.commons.math.ConvergingAlgorithmImpl::setMaximalIterationCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to maximalIterationCount with an access to defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to maximalIterationCount with an access to iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to field maximalIterationCount is replaced by access to local count</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to local count is replaced by access to field maximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to local count is replaced by access to field defaultMaximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>access to local count is replaced by access to field iterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergingAlgorithmImpl.java</sourceFile><mutatedClass>org.apache.commons.math.ConvergingAlgorithmImpl</mutatedClass><mutatedMethod>setMaximalIterationCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>Removed assignment to member variable maximalIterationCount</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>Removed assignment to member variable val$pattern</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>Removed assignment to member variable val$arguments</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to interpolatedState is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to interpolatedState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to interpolatedState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to interpolatedState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currentState is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DummyStepInterpolator.java</sourceFile><mutatedClass>org.apache.commons.math.ode.sampling.DummyStepInterpolator</mutatedClass><mutatedMethod>computeInterpolatedStateAndDerivatives</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException</mutatedClass><mutatedMethod>createIllegalArgumentException</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>removed call to org/apache/commons/math/MathRuntimeException$4::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException</mutatedClass><mutatedMethod>createIllegalArgumentException</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>replaced return value with null for org/apache/commons/math/MathRuntimeException::createIllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException</mutatedClass><mutatedMethod>createIllegalArgumentException</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</killingTests><suspValue>0.06401843996644799</suspValue><description>mutated return of Object value for org/apache/commons/math/MathRuntimeException::createIllegalArgumentException to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.ode.events.EventStateTest.closeEvents(org.apache.commons.math.ode.events.EventStateTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
</mutations>
